From 52aff731d74c2ea8785fb3b6840068202365c45e Mon Sep 17 00:00:00 2001
From: Andreas Mohr <and@gmx.li>
Date: Sat, 5 Mar 2016 12:13:06 +0000
Subject: [PATCH] External panelize: Fix absolute path result usage

Fix absolute paths result usage, before list[0] was checked but
it was always ".." from dir_list_init()
so never absolute path result was detected.

Bug #2942 reported by ackalker.

- sanity: access line[1] only if string is long enough
- tweak: use strlen() once only for speed-up
- cleanup: remove unneeded list->len check because list is always init
- cleanup: remove unchecked ret value from mc_chdir()
- cleanup: remove unused LABELS macro
- hint: add external panelize expected absolute _or_ relative results hint

Signed-off-by: Andreas Mohr <and@gmx.li>
---
 src/filemanager/panelize.c | 24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

diff --git a/src/filemanager/panelize.c b/src/filemanager/panelize.c
index 8050244..42352cd 100644
--- a/src/filemanager/panelize.c
+++ b/src/filemanager/panelize.c
@@ -63,7 +63,6 @@
 #define UX 3
 #define UY 2
 
-#define LABELS   3
 #define B_ADD    B_USER
 #define B_REMOVE (B_USER + 1)
 
@@ -333,6 +332,8 @@ do_external_panelize (char *command)
 
     while (TRUE)
     {
+        size_t len;
+
         clearerr (external);
         if (fgets (line, sizeof (line), external) == NULL)
         {
@@ -341,11 +342,14 @@ do_external_panelize (char *command)
             else
                 break;
         }
-        if (line[strlen (line) - 1] == '\n')
-            line[strlen (line) - 1] = 0;
-        if (strlen (line) < 1)
+
+        len = strlen (line);
+
+        if (line[len - 1] == '\n')
+            line[len - 1] = 0;
+        if (len < 1)
             continue;
-        if (line[0] == '.' && IS_PATH_SEP (line[1]))
+        if (len > 1 && line[0] == '.' && IS_PATH_SEP (line[1]))
             name = line + 2;
         else
             name = line;
@@ -364,19 +368,15 @@ do_external_panelize (char *command)
 
     current_panel->is_panelized = TRUE;
 
-    if (list->len == 0)
-        dir_list_init (list);
-    else if (IS_PATH_SEP (list->list[0].fname[0]))
+    /* HINT: mixed absolute and relative paths result not supported */
+    if (list->len > 1 && IS_PATH_SEP (list->list[1].fname[0]))
     {
         vfs_path_t *vpath_root;
-        int ret;
 
         vpath_root = vfs_path_from_str (PATH_SEP_STR);
         panel_set_cwd (current_panel, vpath_root);
-        ret = mc_chdir (vpath_root);
+        (void) mc_chdir (vpath_root);
         vfs_path_free (vpath_root);
-
-        (void) ret;
     }
 
     if (pclose (external) < 0)
