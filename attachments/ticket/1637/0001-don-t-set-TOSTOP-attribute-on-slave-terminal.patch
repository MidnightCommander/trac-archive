From bf9a5a1d0bcdc2542148687afd526053c7d5fd69 Mon Sep 17 00:00:00 2001
From: Aliaksey Kandratsenka <alk@tut.by>
Date: Thu, 24 Sep 2009 14:20:40 +0300
Subject: [PATCH] don't set TOSTOP attribute on slave terminal

TOSTOP doesn't work well with some software. Examples known to me are:
- debugging multithreaded program with gdb (gdb job stops)
- running 'check' tests in fork mode (default) that do some output
(tests mysteriously fail due to timeout)

IMO TOSTOP adds too little value compared to compatibility problems it
creates.
---
 src/subshell.c |    5 +----
 1 files changed, 1 insertions(+), 4 deletions(-)

diff --git a/src/subshell.c b/src/subshell.c
index 120bd99..05d6ab1 100644
--- a/src/subshell.c
+++ b/src/subshell.c
@@ -214,10 +214,7 @@ init_subshell_child (const char *pty_name)
 
     /* Configure its terminal modes and window size */
 
-    /* Set up the pty with the same termios flags as our own tty, plus  */
-    /* TOSTOP, which keeps background processes from writing to the pty */
-
-    shell_mode.c_lflag |= TOSTOP;	/* So background writers get SIGTTOU */
+    /* Set up the pty with the same termios flags as our own tty */
     if (tcsetattr (subshell_pty_slave, TCSANOW, &shell_mode)) {
 	fprintf (stderr, "Cannot set pty terminal modes: %s\r\n",
 		 unix_error_string (errno));
-- 
1.6.4.3

