From ea7882ad73690e22282572e3777f3b793b0024a1 Mon Sep 17 00:00:00 2001
From: Peter Hjalmarsson <kanelxake@gmail.com>
Date: Thu, 18 Feb 2016 20:07:40 +0100
Subject: [PATCH] Added support for reflink/clone with BTRFS

---
 lib/vfs/vfs.c          | 34 ++++++++++++++++++++++++++++++++++
 lib/vfs/vfs.h          |  2 ++
 src/filemanager/file.c |  7 +++++++
 3 files changed, 43 insertions(+)

diff --git a/lib/vfs/vfs.c b/lib/vfs/vfs.c
index 5000fcab3..5dd5aed2e 100644
--- lib/vfs/vfs.c
+++ lib/vfs/vfs.c
@@ -45,6 +45,13 @@
 #include <errno.h>
 #include <stdlib.h>
 
+#ifdef __linux
+#include <linux/fs.h>
+#ifdef HAVE_SYS_IOCTL_H
+#include <sys/ioctl.h>
+#endif
+#endif
+
 #include "lib/global.h"
 #include "lib/strutil.h"
 #include "lib/util.h"
@@ -656,4 +663,31 @@ vfs_preallocate (int dest_vfs_fd, off_t src_fsize, off_t dest_fsize)
 #endif /* HAVE_POSIX_FALLOCATE */
 }
 
+int
+vfs_clone_file (int dest_vfs_fd, int src_vfs_fd)
+{
+	#ifdef __linux__
+	  void *dest_fd = NULL;
+	  void *src_fd = NULL;
+	  struct vfs_class *dest_class;
+	  struct vfs_class *src_class;
+
+	  dest_class = vfs_class_find_by_handle (dest_vfs_fd, &dest_fd);
+	  if ((dest_class->flags & VFSF_LOCAL) == 0 || dest_fd == NULL)
+            return 0;
+
+	  src_class = vfs_class_find_by_handle (src_vfs_fd, &src_fd);
+	  if ((src_class->flags & VFSF_LOCAL) == 0 || src_fd == NULL)
+            return 0;
+
+	  return ioctl (*(int *) dest_fd, FICLONE, *(int *) src_fd);
+
+
+	#else
+	  (void) dest_vfs_fd;
+	  (void) src_vfs_fd;
+	  return 0;
+	#endif
+}
+
 /* --------------------------------------------------------------------------------------------- */
diff --git a/lib/vfs/vfs.h b/lib/vfs/vfs.h
index 2510195a6..58ba4b59d 100644
--- lib/vfs/vfs.h
+++ lib/vfs/vfs.h
@@ -287,6 +287,8 @@ char *_vfs_get_cwd (void);
 
 int vfs_preallocate (int dest_desc, off_t src_fsize, off_t dest_fsize);
 
+int vfs_clone_file (int dest_vfs_fd, int src_vfs_fd);
+
 /**
  * Interface functions described in interface.c
  */
diff --git a/src/filemanager/file.c b/src/filemanager/file.c
index b61821a86..708967e00 100644
--- src/filemanager/file.c
+++ src/filemanager/file.c
@@ -1738,6 +1738,13 @@ copy_file_file (file_op_total_context_t * tctx, file_op_context_t * ctx,
     appending = ctx->do_append;
     ctx->do_append = FALSE;
 
+    /* Try clone the file first */
+    if (vfs_clone_file(dest_desc,src_desc) == 0)
+    {
+        dst_status = DEST_FULL;
+        goto ret;
+    }
+
     /* Find out the optimal buffer size.  */
     while (mc_fstat (dest_desc, &dst_stat) != 0)
     {
-- 
2.13.0

