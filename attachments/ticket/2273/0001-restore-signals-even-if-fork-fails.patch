From e22007ab78dbef465982ef779014b6b2c7b205a6 Mon Sep 17 00:00:00 2001
From: Oswald Buddenhagen <ossi@kde.org>
Date: Sat, 17 Apr 2010 21:16:36 +0200
Subject: [PATCH] restore signals even if fork() fails

the -1 is not sent through WEXITSTATUS() in case of wait()
failing any more. i think that's the original intention.
---
 lib/utilunix.c |   15 +++++++++++----
 1 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/lib/utilunix.c b/lib/utilunix.c
index 88e447e..5fac25f 100644
--- a/lib/utilunix.c
+++ b/lib/utilunix.c
@@ -167,9 +167,9 @@ my_system (int flags, const char *shell, const char *command)
     if (pid < 0)
     {
         fprintf (stderr, "\n\nfork () = -1\n");
-        return -1;
+        status = -1;
     }
-    if (pid == 0)
+    else if (pid == 0)
     {
         signal (SIGINT, SIG_DFL);
         signal (SIGQUIT, SIG_DFL);
@@ -204,18 +204,25 @@ my_system (int flags, const char *shell, const char *command)
     }
     else
     {
-        while (waitpid (pid, &status, 0) < 0)
+        for (;;)
+        {
+            if (waitpid (pid, &status, 0) > 0)
+            {
+                status = WEXITSTATUS(status);
+                break;
+            }
             if (errno != EINTR)
             {
                 status = -1;
                 break;
             }
+        }
     }
     sigaction (SIGINT, &save_intr, NULL);
     sigaction (SIGQUIT, &save_quit, NULL);
     sigaction (SIGTSTP, &save_stop, NULL);
 
-    return WEXITSTATUS (status);
+    return status;
 }
 
 
-- 
1.7.1.15.g43acf

