From fdeaec766f5063b13f61a241b6cc3315f7b06961 Mon Sep 17 00:00:00 2001
From: Egmont Koblinger <egmont@gmail.com>
Date: Sat, 4 Oct 2014 15:23:13 +0200
Subject: [PATCH 2/2] 3250c12

---
 src/viewer/ascii.c    | 54 +++++++++++++++++++++++++++++++++++++++++++--------
 src/viewer/internal.h |  2 ++
 src/viewer/move.c     | 45 ++++--------------------------------------
 3 files changed, 52 insertions(+), 49 deletions(-)

diff --git a/src/viewer/ascii.c b/src/viewer/ascii.c
index e7ebc7d..33efef3 100644
--- a/src/viewer/ascii.c
+++ b/src/viewer/ascii.c
@@ -551,11 +551,12 @@ mcview_next_combining_char_sequence (mcview_t * view, mcview_state_machine_t * s
  * @param row print to this row
  * @param paragraph_ended store TRUE if paragraph ended by newline or EOF, FALSE if wraps to next
  *   line
+ * @param linewidth store the width of the line here
  * @return the number of rows, that is, 0 if we were already at EOF, otherwise 1
  */
 static int
 mcview_display_line (mcview_t * view, mcview_state_machine_t * state, int row,
-                     gboolean * paragraph_ended)
+                     gboolean * paragraph_ended, off_t * linewidth)
 {
     const screen_dimen left = view->data_area.left;
     const screen_dimen top = view->data_area.top;
@@ -570,7 +571,7 @@ mcview_display_line (mcview_t * view, mcview_state_machine_t * state, int row,
     if (paragraph_ended != NULL)
         *paragraph_ended = TRUE;
 
-    if (!view->text_wrap_mode && (row < 0 || row >= (int) height))
+    if (!view->text_wrap_mode && (row < 0 || row >= (int) height) && linewidth == NULL)
     {
         /* Optimization: Fast forward to the end of the line, rather than carefully
          * parsing and then not actually displaying it. */
@@ -594,7 +595,11 @@ mcview_display_line (mcview_t * view, mcview_state_machine_t * state, int row,
         state_saved = *state;
         n = mcview_next_combining_char_sequence (view, state, cs, 1 + MAX_COMBINING_CHARS, &color);
         if (n == 0)
+        {
+            if (linewidth != NULL)
+                *linewidth = col;
             return (col > 0) ? 1 : 0;
+        }
 
         if (view->search_start <= state->offset && state->offset < view->search_end)
             color = SELECTED_COLOR;
@@ -603,6 +608,8 @@ mcview_display_line (mcview_t * view, mcview_state_machine_t * state, int row,
         {
             /* New line: reset all formatting state for the next paragraph. */
             mcview_state_machine_init (state, state->offset);
+            if (linewidth != NULL)
+                *linewidth = col;
             return 1;
         }
 
@@ -638,6 +645,8 @@ mcview_display_line (mcview_t * view, mcview_state_machine_t * state, int row,
             *state = state_saved;
             if (paragraph_ended != NULL)
                 *paragraph_ended = FALSE;
+            if (linewidth != NULL)
+                *linewidth = col;
             return 1;
         }
 
@@ -699,7 +708,7 @@ mcview_display_line (mcview_t * view, mcview_state_machine_t * state, int row,
         col += charwidth;
         state->unwrapped_column += charwidth;
 
-        if (!view->text_wrap_mode && col >= dpy_text_column + width)
+        if (!view->text_wrap_mode && col >= dpy_text_column + width && linewidth == NULL)
         {
             /* Optimization: Fast forward to the end of the line, rather than carefully
              * parsing and then not actually displaying it. */
@@ -748,7 +757,7 @@ mcview_display_paragraph (mcview_t * view, mcview_state_machine_t * state, int r
     {
         gboolean paragraph_ended;
 
-        lines += mcview_display_line (view, state, row, &paragraph_ended);
+        lines += mcview_display_line (view, state, row, &paragraph_ended, NULL);
         if (paragraph_ended)
             return lines;
 
@@ -793,7 +802,7 @@ mcview_wrap_fixup (mcview_t * view)
         gboolean paragraph_ended;
 
         state_prev = view->dpy_state_top;
-        if (mcview_display_line (view, &view->dpy_state_top, -1, &paragraph_ended) == 0)
+        if (mcview_display_line (view, &view->dpy_state_top, -1, &paragraph_ended, NULL) == 0)
             break;
         if (paragraph_ended)
         {
@@ -903,7 +912,7 @@ mcview_ascii_move_down (mcview_t * view, off_t lines)
         /* See if there's still data below the bottom line, by imaginarily displaying one
          * more line. This takes care of reading more data into growbuf, if required.
          * If the end position didn't advance, we're at EOF and hence bail out. */
-        if (mcview_display_line (view, &view->dpy_state_bottom, -1, &paragraph_ended) == 0)
+        if (mcview_display_line (view, &view->dpy_state_bottom, -1, &paragraph_ended, NULL) == 0)
             break;
 
         /* Okay, there's enough data. Move by 1 row at the top, too. No need to check for
@@ -916,7 +925,7 @@ mcview_ascii_move_down (mcview_t * view, off_t lines)
         }
         else
         {
-            mcview_display_line (view, &view->dpy_state_top, -1, &paragraph_ended);
+            mcview_display_line (view, &view->dpy_state_top, -1, &paragraph_ended, NULL);
             if (!paragraph_ended)
                 view->dpy_paragraph_skip_lines++;
             else
@@ -987,7 +996,36 @@ mcview_ascii_move_up (mcview_t * view, off_t lines)
         mcview_state_machine_init (&view->dpy_state_top, view->dpy_start);
         view->dpy_paragraph_skip_lines -= lines;
         for (i = 0; i < view->dpy_paragraph_skip_lines; i++)
-            mcview_display_line (view, &view->dpy_state_top, -1, NULL);
+            mcview_display_line (view, &view->dpy_state_top, -1, NULL, NULL);
+    }
+}
+
+/* --------------------------------------------------------------------------------------------- */
+
+void
+mcview_ascii_moveto_bol (mcview_t * view)
+{
+    if (!view->text_wrap_mode)
+    {
+        view->dpy_text_column = 0;
+    }
+}
+
+/* --------------------------------------------------------------------------------------------- */
+
+void
+mcview_ascii_moveto_eol (mcview_t * view)
+{
+    if (!view->text_wrap_mode)
+    {
+        mcview_state_machine_t state;
+        off_t linewidth;
+
+        /* Get the width of the topmost paragraph. */
+        mcview_state_machine_init (&state, view->dpy_start);
+        mcview_display_line (view, &state, -1, NULL, &linewidth);
+        view->dpy_text_column =
+            (linewidth > view->data_area.width) ? (linewidth - view->data_area.width) : 0;
     }
 }
 
diff --git a/src/viewer/internal.h b/src/viewer/internal.h
index fc665db..ffadb81 100644
--- a/src/viewer/internal.h
+++ b/src/viewer/internal.h
@@ -243,6 +243,8 @@ void mcview_display_text (mcview_t *);
 void mcview_state_machine_init (mcview_state_machine_t *, off_t);
 void mcview_ascii_move_down (mcview_t *, off_t);
 void mcview_ascii_move_up (mcview_t *, off_t);
+void mcview_ascii_moveto_bol (mcview_t *);
+void mcview_ascii_moveto_eol (mcview_t *);
 
 /* coord_cache.c: */
 coord_cache_t *coord_cache_new (void);
diff --git a/src/viewer/move.c b/src/viewer/move.c
index b7938ac..c956bf4 100644
--- a/src/viewer/move.c
+++ b/src/viewer/move.c
@@ -277,14 +277,12 @@ mcview_moveto_bol (mcview_t * view)
     if (view->hex_mode)
     {
         view->hex_cursor -= view->hex_cursor % view->bytes_per_line;
+        view->dpy_text_column = 0;
     }
-    else if (!view->text_wrap_mode)
+    else
     {
-        view->dpy_start = mcview_bol (view, view->dpy_start, 0);
-        view->dpy_paragraph_skip_lines = 0;
-        view->dpy_wrap_dirty = TRUE;
+        mcview_ascii_moveto_bol (view);
     }
-    view->dpy_text_column = 0;
     mcview_movement_fixups (view, TRUE);
 }
 
@@ -311,42 +309,7 @@ mcview_moveto_eol (mcview_t * view)
     }
     else
     {
-        off_t eol;
-        bol = mcview_bol (view, view->dpy_start, 0);
-        eol = mcview_eol (view, view->dpy_start, mcview_get_filesize (view));
-        if (!view->utf8)
-        {
-            if (eol > bol)
-                view->dpy_text_column = eol - bol;
-        }
-        else
-        {
-            char *str = NULL;
-            switch (view->datasource)
-            {
-            case DS_STDIO_PIPE:
-            case DS_VFS_PIPE:
-                str = mcview_get_ptr_growing_buffer (view, bol);
-                break;
-            case DS_FILE:
-                str = mcview_get_ptr_file (view, bol);
-                break;
-            case DS_STRING:
-                str = mcview_get_ptr_string (view, bol);
-                break;
-            case DS_NONE:
-                break;
-            }
-            if (str != NULL && eol > bol)
-                view->dpy_text_column = g_utf8_strlen (str, eol - bol);
-            else
-                view->dpy_text_column = eol - bol;
-        }
-
-        if (view->dpy_text_column < (off_t) view->data_area.width)
-            view->dpy_text_column = 0;
-        else
-            view->dpy_text_column = view->dpy_text_column - (off_t) view->data_area.width;
+        mcview_ascii_moveto_eol (view);
     }
     mcview_movement_fixups (view, FALSE);
 }
-- 
2.1.0

