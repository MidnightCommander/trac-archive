From 68f67fcb80b65a8e2acca4d4db41a38acd2d23d8 Mon Sep 17 00:00:00 2001
From: Vit Rosin <vit_r@list.ru>
Date: Thu, 18 Feb 2010 13:53:32 +0000
Subject: [PATCH]  'const char *error;' to 'char *error;' redeclaration
   because first *error blocks all the rest errors

---
 lib/search/regex.c |   17 ++++++++++-------
 1 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/lib/search/regex.c b/lib/search/regex.c
index 0fb3866..8bc45e8 100644
--- a/lib/search/regex.c
+++ b/lib/search/regex.c
@@ -481,8 +481,8 @@ mc_search__cond_struct_new_init_regex (const char *charset, mc_search_t * lc_mc_
 #ifdef SEARCH_TYPE_GLIB
     GError *error = NULL;
 #else /* SEARCH_TYPE_GLIB */
-    const char *error;
-    int erroffset;
+    char *error = NULL;
+    int erroffset;    
 #endif /* SEARCH_TYPE_GLIB */
 
     if (!lc_mc_search->is_case_sentitive) {
@@ -492,9 +492,10 @@ mc_search__cond_struct_new_init_regex (const char *charset, mc_search_t * lc_mc_
         g_string_free (tmp, TRUE);
     }
 #ifdef SEARCH_TYPE_GLIB
-    mc_search_cond->regex_handle =
-        g_regex_new (mc_search_cond->str->str, G_REGEX_OPTIMIZE | G_REGEX_RAW | G_REGEX_DOTALL, 0,
-                     &error);
+    mc_search_cond->regex_handle = (mc_search_regex_t *)
+                                    g_regex_new (mc_search_cond->str->str,
+                                                G_REGEX_OPTIMIZE | G_REGEX_RAW | G_REGEX_DOTALL,
+                                                0, &error);
 
     if (error != NULL) {
         lc_mc_search->error = MC_SEARCH_E_REGEX_COMPILE;
@@ -503,18 +504,20 @@ mc_search__cond_struct_new_init_regex (const char *charset, mc_search_t * lc_mc_
         return;
     }
 #else /* SEARCH_TYPE_GLIB */
-    mc_search_cond->regex_handle =
+    mc_search_cond->regex_handle = (mc_search_regex_t *)
         pcre_compile (mc_search_cond->str->str, PCRE_EXTRA, &error, &erroffset, NULL);
     if (mc_search_cond->regex_handle == NULL) {
         lc_mc_search->error = MC_SEARCH_E_REGEX_COMPILE;
         lc_mc_search->error_str = g_strdup (error);
+        g_free (error);
         return;
     }
     lc_mc_search->regex_match_info = pcre_study (mc_search_cond->regex_handle, 0, &error);
     if (lc_mc_search->regex_match_info == NULL) {
-        if (error) {
+        if (error != NULL) {
             lc_mc_search->error = MC_SEARCH_E_REGEX_COMPILE;
             lc_mc_search->error_str = g_strdup (error);
+            g_free (error);
             g_free (mc_search_cond->regex_handle);
             mc_search_cond->regex_handle = NULL;
             return;
-- 
1.6.4

