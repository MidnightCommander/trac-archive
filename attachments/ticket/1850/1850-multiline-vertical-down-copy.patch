From 3fb50f3f373c1c4c2bd487ba3f9e7ee1a69a47a0 Mon Sep 17 00:00:00 2001
From: Vit Rosin <vit_r@list.ru>
Date: Sat, 28 Nov 2009 16:33:53 +0000
Subject: [PATCH] multiline vertical down-copy

---
 edit/edit-impl.h |    5 +++
 edit/edit.c      |   82 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 87 insertions(+), 0 deletions(-)

diff --git a/edit/edit-impl.h b/edit/edit-impl.h
index 6efb373..e42fbbc 100644
--- a/edit/edit-impl.h
+++ b/edit/edit-impl.h
@@ -277,6 +277,11 @@ void edit_syntax_dialog (void);
 void edit_mail_dialog (WEdit *edit);
 void format_paragraph (WEdit *edit, int force);
 
+/* mlvc - multiline vertical down-copy */
+int mlvc_proceed_unmarked_line (WEdit * edit);
+int mlvc_copy_marked_block_down (WEdit * edit, const long start_mark, const long end_mark);
+int mlvc_block_down_copy (WEdit * edit);
+
 /* either command or char_for_insertion must be passed as -1 */
 void edit_execute_cmd (WEdit *edit, int command, int char_for_insertion);
 
diff --git a/edit/edit.c b/edit/edit.c
index 0b0b1eb..040386f 100644
--- a/edit/edit.c
+++ b/edit/edit.c
@@ -121,6 +121,8 @@ const char VERTICAL_MAGIC[] = {'\1', '\1', '\1', '\1', '\n'};
 const global_keymap_t *editor_map;
 const global_keymap_t *editor_x_map;
 
+static long cmarked_lowline;           /* lower highlighted line */
+
 static void user_menu (WEdit *edit);
 
 int edit_get_byte (WEdit * edit, long byte_index)
@@ -2553,6 +2555,10 @@ edit_execute_key_command (WEdit *edit, unsigned long command, int char_for_inser
     if (command != CK_Undo && command != CK_Ext_Mode)
 	edit_push_key_press (edit);
 
+    if (cmarked_lowline >= 0) {
+        if (command != CK_Copy)
+            cmarked_lowline = -1;
+    }
     edit_execute_cmd (edit, command, char_for_insertion);
     if (column_highlighting)
 	edit->force |= REDRAW_PAGE;
@@ -2990,6 +2996,8 @@ edit_execute_cmd (WEdit *edit, int command, int char_for_insertion)
 	break;
 
     case CK_Copy:
+        if (mlvc_block_down_copy (edit))
+            break;
         if ( option_cursor_beyond_eol && edit->over_col > 0 )
             edit_insert_over (edit);
 	edit_block_copy_cmd (edit);
@@ -3341,3 +3349,77 @@ edit_stack_free (void)
 	    edit_stack_iterator++)
 	g_free (edit_history_moveto[edit_stack_iterator].filename);
 }
+
+int mlvc_proceed_unmarked_line (WEdit * edit) /* F5 */
+{
+    long start_mark, end_mark;
+
+    edit_cursor_to_bol (edit);
+    if (edit_get_byte (edit, edit->curs1) == '\n')
+	return 0;
+
+    start_mark = edit->curs1;
+    edit_cursor_to_eol (edit);
+    end_mark = edit->curs1 + 1;
+    cmarked_lowline = edit->curs_line;
+    if (mlvc_copy_marked_block_down (edit, start_mark, end_mark))
+        return 1;
+
+    return 0;
+}
+
+int mlvc_copy_marked_block_down (WEdit * edit, const long start_mark, const long end_mark)
+{
+    long p, n;
+
+    if (cmarked_lowline < 0)
+        return 0;
+
+    edit_mark_cmd (edit, 1);	/* clear */
+    edit_cursor_move (edit, start_mark - edit->curs1);
+    for (n = -1, p = start_mark; p < end_mark; p++)
+        edit_insert (edit, edit_get_byte (edit, ++n + p));
+
+    edit_mark_cmd (edit, 0);	/* mark1 */
+    edit_cursor_move (edit, end_mark - start_mark - 1);
+    cmarked_lowline = edit->curs_line;
+    edit_cursor_move (edit, 1);
+    edit_mark_cmd (edit, 0);	/* mark2 */
+    edit_move_to_line (edit, cmarked_lowline);
+    edit_cursor_to_bol (edit);
+    if (edit->curs_line > (edit->start_line
+            + edit->num_widget_lines - 3))
+        edit_move_display (edit, edit->curs_line - edit->num_widget_lines + 3);
+
+    edit->force |= REDRAW_PAGE;
+    return 1;
+}
+
+int mlvc_block_down_copy (WEdit * edit)
+{
+    long start_mark, end_mark;
+
+    if (column_highlighting)
+        return 0;
+
+    if (eval_marks (edit, &start_mark, &end_mark)) {
+        if (mlvc_proceed_unmarked_line (edit))
+            return 1;
+    } else if (start_mark <= edit->curs1 && edit->curs1 <= end_mark) {
+        if (cmarked_lowline < 0) {
+            edit_cursor_move (edit, (end_mark - 1) - edit->curs1);
+            edit_cursor_to_eol (edit);
+            end_mark = edit->curs1 + 1;
+            cmarked_lowline = edit->curs_line;
+            edit_cursor_move (edit, start_mark - edit->curs1);
+            edit_cursor_to_bol (edit);
+            start_mark = edit->curs1;
+        }
+        if (mlvc_copy_marked_block_down (edit, start_mark, end_mark))
+            return 1;
+    } else {
+        cmarked_lowline = -1;
+    }
+
+    return 0;
+}
-- 
1.6.4

