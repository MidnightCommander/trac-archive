From b5b62c1c5d8cecdd590212926d26fcaca3a5cf8b Mon Sep 17 00:00:00 2001
From: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
Date: Thu, 8 Oct 2020 14:21:33 +0200
Subject: [PATCH 5/7] make query of subshell command buffer leading-dash-safe

when the command buffer started with a valid option to the "echo"
command, weird things would happen. use "printf" instead, which doesn't
have this problem. this affected only the bash and zsh code paths.

amends ff0fc17a.
---
 src/subshell/common.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/subshell/common.c b/src/subshell/common.c
index f9f6aca4e..32577bcb2 100644
--- a/src/subshell/common.c
+++ b/src/subshell/common.c
@@ -1054,7 +1054,7 @@ init_subshell_precmd (char *precmd, size_t buff_size)
     {
     case SHELL_BASH:
         g_snprintf (precmd, buff_size,
-                    " mc_print_command_buffer () { echo \"$READLINE_LINE\" >&%d; }\n"
+                    " mc_print_command_buffer () { printf \"%%s\\\\n\" \"$READLINE_LINE\" >&%d; }\n"
                     " bind -x '\"\\e" SHELL_BUFFER_KEYBINDING "\":\"mc_print_command_buffer\"'\n"
                     " bind -x '\"\\e" SHELL_CURSOR_KEYBINDING "\":\"echo $READLINE_POINT>&%d\"'\n"
                     " PROMPT_COMMAND=${PROMPT_COMMAND:+$PROMPT_COMMAND\n}'pwd>&%d;kill -STOP $$'\n"
@@ -1118,7 +1118,7 @@ init_subshell_precmd (char *precmd, size_t buff_size)
 
     case SHELL_ZSH:
         g_snprintf (precmd, buff_size,
-                    " mc_print_command_buffer () { echo \"$BUFFER\"' >&%d}\n"
+                    " mc_print_command_buffer () { printf \"%%s\\\\n\" \"$BUFFER\" >&%d; }\n"
                     " zle -N mc_print_command_buffer\n"
                     " bindkey '^[" SHELL_BUFFER_KEYBINDING "' mc_print_command_buffer\n"
                     " mc_print_cursor_position () { echo $CURSOR >&%d}\n"
-- 
2.28.0.1.g7ba5ae0684

