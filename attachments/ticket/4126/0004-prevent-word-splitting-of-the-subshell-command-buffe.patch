From 7447bd9c9c8021bd0cac1128297bb056643d2480 Mon Sep 17 00:00:00 2001
From: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
Date: Thu, 8 Oct 2020 17:29:33 +0200
Subject: [PATCH 4/7] prevent word-splitting of the subshell command buffer

this avoids inadvertent whitespace normalization (compression and
trimming), which is annoying and additionally invalidates the cursor
position.

for bash and zsh that meant quoting the variable expansion, while for
fish it meant removing the pointless indirection through echo.
for bash we had to introduce an indirection through a function, as there
is apparently no way to get the quoting right inside the binding. zsh
already had such an indirection - maybe for the same reason?

amends ff0fc17a.
---
 src/subshell/common.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/src/subshell/common.c b/src/subshell/common.c
index 3e1a2f7ee..f9f6aca4e 100644
--- a/src/subshell/common.c
+++ b/src/subshell/common.c
@@ -1054,7 +1054,8 @@ init_subshell_precmd (char *precmd, size_t buff_size)
     {
     case SHELL_BASH:
         g_snprintf (precmd, buff_size,
-                    " bind -x '\"\\e" SHELL_BUFFER_KEYBINDING "\":\"echo $READLINE_LINE>&%d\"'\n"
+                    " mc_print_command_buffer () { echo \"$READLINE_LINE\" >&%d; }\n"
+                    " bind -x '\"\\e" SHELL_BUFFER_KEYBINDING "\":\"mc_print_command_buffer\"'\n"
                     " bind -x '\"\\e" SHELL_CURSOR_KEYBINDING "\":\"echo $READLINE_POINT>&%d\"'\n"
                     " PROMPT_COMMAND=${PROMPT_COMMAND:+$PROMPT_COMMAND\n}'pwd>&%d;kill -STOP $$'\n"
                     "PS1='\\u@\\h:\\w\\$ '\n",
@@ -1117,7 +1118,7 @@ init_subshell_precmd (char *precmd, size_t buff_size)
 
     case SHELL_ZSH:
         g_snprintf (precmd, buff_size,
-                    " mc_print_command_buffer () { echo $BUFFER >&%d}\n"
+                    " mc_print_command_buffer () { echo \"$BUFFER\"' >&%d}\n"
                     " zle -N mc_print_command_buffer\n"
                     " bindkey '^[" SHELL_BUFFER_KEYBINDING "' mc_print_command_buffer\n"
                     " mc_print_cursor_position () { echo $CURSOR >&%d}\n"
@@ -1136,8 +1137,8 @@ init_subshell_precmd (char *precmd, size_t buff_size)
         break;
     case SHELL_FISH:
         g_snprintf (precmd, buff_size,
-                    " bind \\e" SHELL_BUFFER_KEYBINDING " 'echo (commandline)>&%d';"
-                    "bind \\e" SHELL_CURSOR_KEYBINDING " 'echo (commandline -C)>&%d';"
+                    " bind \\e" SHELL_BUFFER_KEYBINDING " 'commandline >&%d';"
+                    "bind \\e" SHELL_CURSOR_KEYBINDING " 'commandline -C >&%d';"
                     "if not functions -q fish_prompt_mc;"
                     "functions -e fish_right_prompt;"
                     "functions -c fish_prompt fish_prompt_mc; end;"
-- 
2.28.0.1.g7ba5ae0684

