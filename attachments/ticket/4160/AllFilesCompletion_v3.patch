From d5ed152eeae4b676c9be44043f1849506fbbed36 Mon Sep 17 00:00:00 2001
From: Sebastian Gniazdowski <sgniazdowski@gmail.com>
Date: Wed, 20 Jan 2021 19:52:55 -0600
Subject: Add an option for completing from all buffers.

---
 src/editor/edit.c            |  1 +
 src/editor/edit.h            |  1 +
 src/editor/editcmd.c         | 44 ++++++++++++++++++++++++++++++++----
 src/editor/editcmd_dialogs.c |  9 ++++++++
 src/setup.c                  |  1 +
 5 files changed, 52 insertions(+), 4 deletions(-)

diff --git a/src/editor/edit.c b/src/editor/edit.c
index edda1f832..bada6619c 100644
--- a/src/editor/edit.c
+++ b/src/editor/edit.c
@@ -90,6 +90,7 @@ gboolean option_line_state = FALSE;
 int option_line_state_width = 0;
 gboolean option_cursor_after_inserted_block = FALSE;
 gboolean option_state_full_filename = FALSE;
+gboolean option_completion_collect_other_files = TRUE;
 
 gboolean enable_show_tabs_tws = TRUE;
 gboolean option_check_nl_at_eof = FALSE;
diff --git a/src/editor/edit.h b/src/editor/edit.h
index 6c519e9d3..de5645179 100644
--- a/src/editor/edit.h
+++ b/src/editor/edit.h
@@ -47,6 +47,7 @@ extern int option_save_mode;
 extern gboolean option_save_position;
 extern gboolean option_syntax_highlighting;
 extern gboolean option_group_undo;
+extern gboolean option_completion_collect_other_files;
 extern char *option_backup_ext;
 extern char *option_filesize_threshold;
 extern char *option_stop_format_chars;
diff --git a/src/editor/editcmd.c b/src/editor/editcmd.c
index 0d2caa923..1e010aabb 100644
--- a/src/editor/editcmd.c
+++ b/src/editor/editcmd.c
@@ -96,7 +96,7 @@ gboolean option_drop_selection_on_copy = TRUE;
 
 #define TEMP_BUF_LEN 1024
 
-#define MAX_WORD_COMPLETIONS 100        /* in listbox */
+#define MAX_WORD_COMPLETIONS 150        /* in listbox */
 
 /*** file scope type declarations ****************************************************************/
 
@@ -1212,7 +1212,7 @@ edit_collect_completions_get_current_word (edit_search_status_msg_t * esm, mc_se
 
 static gsize
 edit_collect_completions (WEdit * edit, off_t word_start, gsize word_len,
-                          char *match_expr, GString ** compl, gsize * num)
+                          char *match_expr, GString ** compl, gsize * num, gsize current_limit)
 {
     gsize len = 0;
     gsize max_len = 0;
@@ -1302,7 +1302,7 @@ edit_collect_completions (WEdit * edit, off_t word_start, gsize word_len,
         if (skip != 0)
             continue;
 
-        if (*num == MAX_WORD_COMPLETIONS)
+        if (*num >= current_limit)
         {
             g_string_free (compl[0], TRUE);
             for (i = 1; i < *num; i++)
@@ -3339,6 +3339,10 @@ edit_complete_word_cmd (WEdit * edit)
     GString *match_expr;
     GString *compl[MAX_WORD_COMPLETIONS];       /* completions */
 
+    WEdit *edit_wid;
+    const WGroup *gr;
+    GList *w;
+
     /* search start of word to be completed */
     if (!edit_find_word_start (&edit->buffer, &word_start, &word_len))
         return;
@@ -3355,7 +3359,39 @@ edit_complete_word_cmd (WEdit * edit)
     /* start search from begin to end of file */
     max_len =
         edit_collect_completions (edit, word_start, word_len, match_expr->str, (GString **) & compl,
-                                  &num_compl);
+                                  &num_compl, MAX_WORD_COMPLETIONS);
+
+    /*
+     * Should search also other open files ? This «if» collects them up to MAX_WORD_COMPLETIONS
+     * limit.
+     */
+    if (option_completion_collect_other_files && num_compl < MAX_WORD_COMPLETIONS)
+    {
+        /*
+         * Process all the remaining files by listing the editor widgets
+         * grouped in the main editor dialog.
+         */
+        gr = CONST_GROUP (CONST_WIDGET (edit)->owner);
+        for (w = gr->widgets; w != NULL; w = g_list_next (w))
+        {
+            if (w->data != edit && edit_widget_is_editor (CONST_WIDGET (w->data)))
+            {
+                gsize max_len_candidate, num_compl_sub = 0;
+                edit_wid = (WEdit *) w->data;
+                max_len_candidate =
+                    edit_collect_completions (edit_wid, word_start, word_len, match_expr->str,
+                                              ((GString **) & compl) + num_compl, &num_compl_sub,
+                                              MAX_WORD_COMPLETIONS - num_compl);
+
+                if (max_len_candidate > max_len)
+                    max_len = max_len_candidate;
+
+                num_compl += num_compl_sub;
+                if (num_compl >= MAX_WORD_COMPLETIONS)
+                    break;
+            }
+        }
+    }
 
     if (num_compl > 0)
     {
diff --git a/src/editor/editcmd_dialogs.c b/src/editor/editcmd_dialogs.c
index 8b3634f23..3c65331c2 100644
--- a/src/editor/editcmd_dialogs.c
+++ b/src/editor/editcmd_dialogs.c
@@ -385,6 +385,7 @@ editcmd_dialog_completion_show (const WEdit * edit, int max_len, GString ** comp
 
     /* create the listbox */
     compl_list = listbox_new (1, 1, compl_dlg_h - 2, compl_dlg_w - 2, FALSE, NULL);
+    compl_list->allow_duplicates = FALSE;
 
     /* add the dialog */
     group_add_widget (GROUP (compl_dlg), compl_list);
@@ -394,6 +395,14 @@ editcmd_dialog_completion_show (const WEdit * edit, int max_len, GString ** comp
         listbox_add_item (compl_list, LISTBOX_APPEND_AT_END, 0, (char *) compl[i]->str, NULL,
                           FALSE);
 
+    /* Set widgets size after possible duplicates removal. */
+    num_compl = listbox_get_length (compl_list);
+    if (num_compl < compl_dlg_h - 2)
+    {
+        WIDGET (compl_list)->lines = num_compl;
+        WIDGET (compl_dlg)->lines = num_compl + 2;
+    }
+
     /* pop up the dialog and apply the chosen completion */
     if (dlg_run (compl_dlg) == B_ENTER)
     {
diff --git a/src/setup.c b/src/setup.c
index 77c07649d..f2f5eb427 100644
--- a/src/setup.c
+++ b/src/setup.c
@@ -357,6 +357,7 @@ static const struct
     { "editor_show_right_margin", &show_right_margin },
     { "editor_group_undo", &option_group_undo },
     { "editor_state_full_filename", &option_state_full_filename },
+    { "editor_wordcompletion_collect_other_files", &option_completion_collect_other_files },
 #endif /* USE_INTERNAL_EDIT */
     { "editor_ask_filename_before_edit", &editor_ask_filename_before_edit },
     { "nice_rotating_dash", &nice_rotating_dash },
-- 
2.28.0

