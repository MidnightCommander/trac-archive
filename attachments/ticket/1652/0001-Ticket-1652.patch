From 713e6056862cdfe9e8ec4275ae39d1abf25c36bf Mon Sep 17 00:00:00 2001
From: Ilia Maslakov <il.smind@gmail.com>
Date: Mon, 28 Mar 2011 12:42:53 +0000
Subject: [PATCH 1/2] Ticket #1652 (autodetect line-endings)

    * On opening file, detect line-endings used by sampling some initial content.
    * If it happen to be CR or CRLF, skip fast load path, and in edit_insert_file() convert such line endings to \n.
    * Save detected line ending type for editor.
Signed-off-by: Ilia Maslakov <il.smind@gmail.com>
---
 src/editor/edit-impl.h |    2 +-
 src/editor/edit.c      |   59 +++++++++++++++++++++++++++++++++++++++++++-----
 src/editor/editcmd.c   |   12 +++++----
 src/editor/editdraw.c  |   21 ++++++++++++-----
 4 files changed, 76 insertions(+), 18 deletions(-)

diff --git a/src/editor/edit-impl.h b/src/editor/edit-impl.h
index d6bb43a..1b6ac87 100644
--- a/src/editor/edit-impl.h
+++ b/src/editor/edit-impl.h
@@ -290,7 +290,7 @@ void edit_insert_column_of_text (WEdit * edit, unsigned char *data, int size, in
                                  long *start_pos, long *end_pos, int *col1, int *col2);
 int edit_insert_column_of_text_from_file (WEdit * edit, int file,
                                           long *start_pos, long *end_pos, int *col1, int *col2);
-long edit_insert_file (WEdit * edit, const char *filename);
+long edit_insert_file (WEdit * edit, const char *filename, LineBreaks lb_type);
 int edit_load_back_cmd (WEdit * edit);
 int edit_load_forward_cmd (WEdit * edit);
 void edit_block_process_cmd (WEdit * edit, int macro_number);
diff --git a/src/editor/edit.c b/src/editor/edit.c
index 226151b..0d854f9 100644
--- a/src/editor/edit.c
+++ b/src/editor/edit.c
@@ -419,6 +419,35 @@ check_file_access (WEdit * edit, const char *filename, struct stat *st)
 
 /* --------------------------------------------------------------------------------------------- */
 /**
+ * detect type of line breaks of loaded file by lead BUF_MEDIUM bytes
+ *
+ */
+static LineBreaks
+detect_lb_type (char *filename)
+{
+    char buf[BUF_MEDIUM];
+    ssize_t file, sz;
+
+    file = mc_open (filename, O_RDONLY | O_BINARY);
+    if (file == -1)
+        return LB_ASIS;
+
+    memset (buf, 0, sizeof (buf));
+    sz = mc_read (file, buf, sizeof (buf) - 1);
+    if (sz < 0)
+        return LB_ASIS;
+    mc_close (file);
+
+    buf[(size_t) sz] = '\0';
+    if (strstr (buf, "\r\n") != NULL)
+        return LB_WIN;
+    if (strchr (buf, '\r') != NULL)
+        return LB_MAC;
+    return LB_ASIS;
+}
+
+/* --------------------------------------------------------------------------------------------- */
+/**
  * Open the file and load it into the buffers, either directly or using
  * a filter.  Return 0 on success, 1 on error.
  *
@@ -432,6 +461,7 @@ static int
 edit_load_file (WEdit * edit)
 {
     int fast_load = 1;
+    LineBreaks lb_type = LB_ASIS;
 
     /* Cannot do fast load if a filter is used */
     if (edit_find_filter (edit->filename) >= 0)
@@ -454,6 +484,10 @@ edit_load_file (WEdit * edit)
         /* If we are dealing with a real file, check that it exists */
         if (check_file_access (edit, edit->filename, &edit->stat1))
             return 1;
+        lb_type = detect_lb_type(edit->filename);
+
+        if (lb_type != LB_ASIS && lb_type != LB_UNIX)
+            fast_load = 0;
     }
     else
     {
@@ -476,15 +510,16 @@ edit_load_file (WEdit * edit)
         if (*edit->filename)
         {
             edit->undo_stack_disable = 1;
-            if (edit_insert_file (edit, edit->filename) == 0)
+            if (edit_insert_file (edit, edit->filename, lb_type) == 0)
             {
                 edit_clean (edit);
                 return 1;
             }
+            edit_set_markers (edit, 0, 0, 0, 0);
             edit->undo_stack_disable = 0;
         }
     }
-    edit->lb = LB_ASIS;
+    edit->lb = lb_type;
     return 0;
 }
 
@@ -1665,7 +1700,7 @@ user_menu (WEdit * edit, const char *menu_file, int selected_entry)
         {
             long ins_len;
 
-            ins_len = edit_insert_file (edit, block_file);
+            ins_len = edit_insert_file (edit, block_file, LB_ASIS);
             if (nomark == 0 && ins_len > 0)
                 edit_set_markers (edit, start_mark, start_mark + ins_len, 0, 0);
         }
@@ -1987,7 +2022,7 @@ edit_write_stream (WEdit * edit, FILE * f)
 /* --------------------------------------------------------------------------------------------- */
 /** inserts a file at the cursor, returns count of inserted bytes on success */
 long
-edit_insert_file (WEdit * edit, const char *filename)
+edit_insert_file (WEdit * edit, const char *filename, LineBreaks lb_type)
 {
     char *p;
     long ins_len = 0;
@@ -2062,7 +2097,19 @@ edit_insert_file (WEdit * edit, const char *filename)
             while ((blocklen = mc_read (file, (char *) buf, TEMP_BUF_LEN)) > 0)
             {
                 for (i = 0; i < blocklen; i++)
-                    edit_insert (edit, buf[i]);
+                {
+                    if (buf[i] == '\r')
+                    {
+                        if (lb_type == LB_MAC)
+                            edit_insert (edit, '\n');
+                        else if (lb_type == LB_WIN)
+                        /* just skip */;
+                        else
+                            edit_insert (edit, '\r');
+                    }
+                    else
+                        edit_insert (edit, buf[i]);
+                }
             }
             /* highlight inserted text then not persistent blocks */
             if (!option_persistent_selections)
@@ -2157,7 +2204,7 @@ edit_init (WEdit * edit, int lines, int columns, const char *filename, long line
     edit->redo_stack_size = START_STACK_SIZE;
     edit->redo_stack_size_mask = START_STACK_SIZE - 1;
     edit->redo_stack = g_malloc0 ((edit->redo_stack_size + 10) * sizeof (long));
-
+    edit->highlight = 0;
     edit->utf8 = 0;
     edit->converter = str_cnv_from_term;
     edit_set_codeset (edit);
diff --git a/src/editor/editcmd.c b/src/editor/editcmd.c
index fc027e1..15f1b45 100644
--- a/src/editor/editcmd.c
+++ b/src/editor/editcmd.c
@@ -432,7 +432,9 @@ edit_get_save_file_as (WEdit * edit)
     {
         char *fname;
 
-        edit->lb = cur_lb;
+        /* Don't change current LB type (possibly autodetected), unless user asked to. */
+        if (cur_lb != LB_ASIS)
+            edit->lb = cur_lb;
         fname = tilde_expand (filename);
         g_free (filename);
         return fname;
@@ -2638,7 +2640,7 @@ edit_paste_from_X_buf_cmd (WEdit * edit)
     /* try use external clipboard utility */
     mc_event_raise (MCEVENT_GROUP_CORE, "clipboard_file_from_ext_clip", NULL);
     tmp = concat_dir_and_file (mc_config_get_cache_path (), EDIT_CLIP_FILE);
-    edit_insert_file (edit, tmp);
+    edit_insert_file (edit, tmp, LB_ASIS);
     g_free (tmp);
 }
 
@@ -2754,7 +2756,7 @@ edit_insert_file_cmd (WEdit * edit)
         }
         else
         {
-            if (edit_insert_file (edit, exp) != 0)
+            if (edit_insert_file (edit, exp, LB_ASIS) != 0)
             {
                 g_free (exp);
                 edit->force |= REDRAW_COMPLETELY;
@@ -2828,7 +2830,7 @@ edit_sort_cmd (WEdit * edit)
     if (edit_block_delete_cmd (edit))
         return 1;
     tmp = concat_dir_and_file (mc_config_get_cache_path (), EDIT_TEMP_FILE);
-    edit_insert_file (edit, tmp);
+    edit_insert_file (edit, tmp, LB_ASIS);
     g_free (tmp);
     return 0;
 }
@@ -2867,7 +2869,7 @@ edit_ext_cmd (WEdit * edit)
 
     edit->force |= REDRAW_COMPLETELY;
     tmp = concat_dir_and_file (mc_config_get_cache_path (), EDIT_TEMP_FILE);
-    edit_insert_file (edit, tmp);
+    edit_insert_file (edit, tmp, LB_ASIS);
     g_free (tmp);
     return 0;
 }
diff --git a/src/editor/editdraw.c b/src/editor/editdraw.c
index 7fbb294..d0368cf 100644
--- a/src/editor/editdraw.c
+++ b/src/editor/editdraw.c
@@ -102,6 +102,13 @@ status_string (WEdit * edit, char *s, int w)
     unsigned int cur_utf = 0;
     int cw = 1;
 
+    static const char *lb_names[LB_NAMES] = {
+        "",
+        "LF",
+        "CRLF",
+        "CR"
+    };
+
     /*
      * If we are at the end of file, print <EOF>,
      * otherwise print the current character as is (if printable),
@@ -141,7 +148,7 @@ status_string (WEdit * edit, char *s, int w)
     /* The field lengths just prevent the status line from shortening too much */
     if (simple_statusbar)
         g_snprintf (s, w,
-                    "%c%c%c%c %3ld %5ld/%ld %6ld/%ld %s %s",
+                    "%c%c%c%c %3ld %5ld/%ld %6ld/%ld %s %s %s",
                     edit->mark1 != edit->mark2 ? (edit->column_highlight ? 'C' : 'B') : '-',
                     edit->modified ? 'M' : '-',
                     macro_index < 0 ? '-' : 'R',
@@ -150,14 +157,15 @@ status_string (WEdit * edit, char *s, int w)
                     edit->curs_line + 1,
                     edit->total_lines + 1, edit->curs1, edit->last_byte, byte_str,
 #ifdef HAVE_CHARSET
-                    mc_global.source_codepage >= 0 ? get_codepage_id (mc_global.source_codepage) : ""
+                    mc_global.source_codepage >= 0 ? get_codepage_id (mc_global.source_codepage) : "",
 #else
-                    ""
+                    "",
 #endif
+                    lb_names[edit->lb]
             );
     else
         g_snprintf (s, w,
-                    "[%c%c%c%c] %2ld L:[%3ld+%2ld %3ld/%3ld] *(%-4ld/%4ldb) %s  %s",
+                    "[%c%c%c%c] %2ld L:[%3ld+%2ld %3ld/%3ld] *(%-4ld/%4ldb) %s %s %s",
                     edit->mark1 != edit->mark2 ? (edit->column_highlight ? 'C' : 'B') : '-',
                     edit->modified ? 'M' : '-',
                     macro_index < 0 ? '-' : 'R',
@@ -168,10 +176,11 @@ status_string (WEdit * edit, char *s, int w)
                     edit->curs_line + 1,
                     edit->total_lines + 1, edit->curs1, edit->last_byte, byte_str,
 #ifdef HAVE_CHARSET
-                    mc_global.source_codepage >= 0 ? get_codepage_id (mc_global.source_codepage) : ""
+                    mc_global.source_codepage >= 0 ? get_codepage_id (mc_global.source_codepage) : "",
 #else
-                    ""
+                    "",
 #endif
+                    lb_names[edit->lb]
             );
 }
 
-- 
1.7.3.5

