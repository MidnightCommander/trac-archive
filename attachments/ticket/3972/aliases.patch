diff --git a/lib/charsets.c b/lib/charsets.c
index 0df5ecb21..5b1e3f386 100644
--- a/lib/charsets.c
+++ b/lib/charsets.c
@@ -33,6 +33,8 @@
 #include <stdlib.h>
 #include <string.h>
 
+#include <gio/gio.h>
+
 #include "lib/global.h"
 #include "lib/strutil.h"        /* utf-8 functions */
 #include "lib/fileloc.h"
@@ -96,84 +98,105 @@ free_codepage_desc (gpointer data)
 static void
 load_codepages_list_from_file (GPtrArray **list, const char *fname)
 {
-    FILE *f;
-    char buf[BUF_MEDIUM];
-    char *default_codepage = NULL;
+    GFile *fp = g_file_new_for_path (fname);    // never fails
+    GFileInputStream *input_stream = g_file_read (fp, NULL, NULL);
+    GDataInputStream *data_input_stream = NULL;
+
+    if (input_stream == NULL)
+        goto cleanup;
 
-    f = fopen (fname, "r");
-    if (f == NULL)
-        return;
+    data_input_stream = g_data_input_stream_new (G_INPUT_STREAM (input_stream));
+    if (data_input_stream == NULL)
+        goto cleanup;
 
-    while (fgets (buf, sizeof buf, f) != NULL)
+    while (TRUE)
     {
-        /* split string into id and cpname */
-        char *p = buf;
-        size_t buflen;
-
-        if (*p == '\n' || *p == '\0' || *p == '#')
-            continue;
-
-        buflen = strlen (buf);
-
-        if (buflen != 0 && buf[buflen - 1] == '\n')
-            buf[buflen - 1] = '\0';
-        while (*p != '\0' && !whitespace (*p))
-            ++p;
-        if (*p == '\0')
-            goto fail;
-
-        *p++ = '\0';
-        g_strstrip (p);
-        if (*p == '\0')
-            goto fail;
-
-        if (strcmp (buf, "default") == 0)
-            default_codepage = g_strdup (p);
-        else
+        gchar **key_value = NULL;
+        gchar **keys = NULL;
+        GPtrArray *encodings = NULL;
+        gsize j = 0, i = 0, size;
+        GError *error = NULL;
+        gchar *line = g_data_input_stream_read_line (data_input_stream, &size, NULL, &error);
+
+        if (line == NULL)
         {
-            const char *id = buf;
+            // error handling - error->message
+            if (error != NULL)
+                g_error_free (error);
+            break;
+        }
 
-            if (*list == NULL)
-            {
-                *list = g_ptr_array_new_full (16, free_codepage_desc);
-                g_ptr_array_add (*list, new_codepage_desc (id, p));
-            }
-            else
+        if (*line == '\n' || *line == '\0' || *line == '#')
+            goto next_line;
+
+        key_value = g_strsplit_set (line, " \t", 2);
+        if (key_value == NULL || g_strv_length (key_value) != 2)
+            goto next_line;
+
+        keys = g_strsplit (key_value[0], ",", -1);
+        if (keys == NULL || g_strv_length (keys) < 1)
+            goto next_line;
+
+        encodings = g_ptr_array_new_full (1, g_free);
+        for (i = 0; i < g_strv_length (keys); i++)
+        {
+            char *id = g_strstrip (g_strdup (keys[i]));
+            if (*id != '\0')
+                g_ptr_array_add (encodings, id);
+        }
+
+        if (encodings->len < 1)
+            goto next_line;
+
+        if (*list == NULL)
+            *list = g_ptr_array_new_full (16, free_codepage_desc);
+
+
+        for (i = 0; i < encodings->len; i++)
+        {
+            gchar *id = g_strdup (g_ptr_array_index (encodings, i));
+            gchar *description =
+                g_strdup_printf ("%s (%s)", g_strstrip (g_strdup (key_value[1])), id);
+
+            /* whether id is already present in list */
+            /* if yes, overwrite description */
+            for (j = 0; j < (*list)->len; j++)
             {
-                unsigned int i;
+                codepage_desc *desc = g_ptr_array_index (*list, j);
 
-                /* whether id is already present in list */
-                /* if yes, overwrite description */
-                for (i = 0; i < (*list)->len; i++)
+                /* found */
+                if (strcmp (id, desc->id) == 0)
                 {
-                    codepage_desc *desc;
+                    g_free (desc->name);
+                    desc->name = g_strdup (description);
+                    break;
+                }
+            }
 
-                    desc = (codepage_desc *) g_ptr_array_index (*list, i);
+            /* not found */
+            if (j == (*list)->len)
+                g_ptr_array_add (*list, new_codepage_desc (id, description));
 
-                    if (strcmp (id, desc->id) == 0)
-                    {
-                        /* found */
-                        g_free (desc->name);
-                        desc->name = g_strdup (p);
-                        break;
-                    }
-                }
+            g_free (id);
+            g_free (description);
 
-                /* not found */
-                if (i == (*list)->len)
-                    g_ptr_array_add (*list, new_codepage_desc (id, p));
-            }
+
+          next_line:
+            g_strfreev (keys);
+            g_strfreev (key_value);
+            g_free (line);
         }
-    }
 
-    if (default_codepage != NULL)
-    {
-        mc_global.display_codepage = get_codepage_index (default_codepage);
-        g_free (default_codepage);
     }
 
-  fail:
-    fclose (f);
+
+  cleanup:
+#define g_object_unref_maybe_null(ptr) if (ptr != NULL) g_object_unref(ptr);
+    g_object_unref_maybe_null (data_input_stream);
+    g_object_unref_maybe_null (input_stream);
+    g_object_unref_maybe_null (fp);
+#undef g_object_unref_maybe_null
+
 }
 
 /* --------------------------------------------------------------------------------------------- */
diff --git a/m4.include/mc-glib.m4 b/m4.include/mc-glib.m4
index f93962f0e..2830ec573 100644
--- a/m4.include/mc-glib.m4
+++ b/m4.include/mc-glib.m4
@@ -8,12 +8,12 @@ AC_DEFUN([mc_G_MODULE_SUPPORTED], [
     g_module_supported=""
 
     found_gmodule=no
-    PKG_CHECK_MODULES(GMODULE, [gmodule-no-export-2.0 >= 2.32], [found_gmodule=yes], [:])
+    PKG_CHECK_MODULES(GMODULE, [gmodule-no-export-2.0 >= 2.32 gio-2.0], [found_gmodule=yes], [:])
     if test x"$found_gmodule" = xyes; then
         g_module_supported="gmodule-no-export-2.0"
     else
         dnl try fallback to the generic gmodule
-        PKG_CHECK_MODULES(GMODULE, [gmodule-2.0 >= 2.32], [found_gmodule=yes], [:])
+        PKG_CHECK_MODULES(GMODULE, [gmodule-2.0 >= 2.32 gio-2.0], [found_gmodule=yes], [:])
         if test x"$found_gmodule" = xyes; then
             g_module_supported="gmodule-2.0"
         fi
@@ -43,6 +43,8 @@ AC_DEFUN([mc_G_MODULE_SUPPORTED], [
                 lib=glib ;;
             x-lgmodule*)
                 lib=gmodule ;;
+            x-lgio*)
+                lib=gio ;;
             *)
                 lib=
                 add="$i" ;;
@@ -78,7 +80,7 @@ AC_DEFUN([mc_CHECK_GLIB], [
         AS_HELP_STRING([--with-glib-static], [Link glib statically @<:@no@:>@]))
 
     glib_found=no
-    PKG_CHECK_MODULES(GLIB, [glib-2.0 >= 2.32], [glib_found=yes], [:])
+    PKG_CHECK_MODULES(GLIB, [glib-2.0 >= 2.32 gio-2.0], [glib_found=yes], [:])
     if test x"$glib_found" = xno; then
         AC_MSG_ERROR([glib-2.0 not found or version too old (must be >= 2.32)])
     fi
