From 964412fc7557b844d63682db7f074fc28e02f2f4 Mon Sep 17 00:00:00 2001
From: Andreas Mohr <and@gmx.li>
Date: Tue, 8 Dec 2020 15:10:05 +0000
Subject: [PATCH] (cons.handler.c) fix resource leak

handle open failure properly

Found by Coverity
Coverity id #32608

Signed-off-by: Andreas Mohr <and@gmx.li>
---
 src/cons.handler.c | 34 +++++++++++++++++++---------------
 1 file changed, 19 insertions(+), 15 deletions(-)

diff --git a/src/cons.handler.c b/src/cons.handler.c
index 79297c2a7..9aa24b187 100644
--- a/src/cons.handler.c
+++ b/src/cons.handler.c
@@ -142,8 +142,8 @@ handle_console_linux (console_action_t action)
     {
     case CONSOLE_INIT:
         /* Close old pipe ends in case it is the 2nd time we run cons.saver */
-        status = close (pipefd1[1]);
-        status = close (pipefd2[0]);
+        close (pipefd1[1]);
+        close (pipefd2[0]);
         /* Create two pipes for communication */
         if (!((pipe (pipefd1) == 0) && ((pipe (pipefd2)) == 0)))
         {
@@ -156,24 +156,24 @@ handle_console_linux (console_action_t action)
         {
             /* Cannot fork */
             /* Delete pipes */
-            status = close (pipefd1[1]);
-            status = close (pipefd1[0]);
-            status = close (pipefd2[1]);
-            status = close (pipefd2[0]);
+            close (pipefd1[1]);
+            close (pipefd1[0]);
+            close (pipefd2[1]);
+            close (pipefd2[0]);
             mc_global.tty.console_flag = '\0';
         }
         else if (cons_saver_pid > 0)
         {
             /* Parent */
             /* Close the extra pipe ends */
-            status = close (pipefd1[0]);
-            status = close (pipefd2[1]);
+            close (pipefd1[0]);
+            close (pipefd2[1]);
             /* Was the child successful? */
             status = read (pipefd2[0], &mc_global.tty.console_flag, 1);
             if (mc_global.tty.console_flag == '\0')
             {
                 pid_t ret;
-                status = close (pipefd1[1]);
+                close (pipefd1[1]);
                 status = close (pipefd2[0]);
                 ret = waitpid (cons_saver_pid, &status, 0);
                 (void) ret;
@@ -185,25 +185,29 @@ handle_console_linux (console_action_t action)
             char *tty_name;
 
             /* Close the extra pipe ends */
-            status = close (pipefd1[1]);
-            status = close (pipefd2[0]);
+            close (pipefd1[1]);
+            close (pipefd2[0]);
             tty_name = ttyname (0);
             /* Bind the pipe 0 to the standard input */
             do
             {
                 if (dup2 (pipefd1[0], STDIN_FILENO) == -1)
                     break;
-                status = close (pipefd1[0]);
+                close (pipefd1[0]);
                 /* Bind the pipe 1 to the standard output */
                 if (dup2 (pipefd2[1], STDOUT_FILENO) == -1)
                     break;
 
-                status = close (pipefd2[1]);
+                close (pipefd2[1]);
                 /* Bind standard error to /dev/null */
-                status = open ("/dev/null", O_WRONLY);
+                if ((status = open ("/dev/null", O_WRONLY)) == -1)
+                     break;
                 if (dup2 (status, STDERR_FILENO) == -1)
+                {
+                    close (status);
                     break;
-                status = close (status);
+                }
+                close (status);
                 if (tty_name != NULL)
                 {
                     char *mc_conssaver;
