diff --git a/src/filemanager/cmd.c b/src/filemanager/cmd.c
index 557964e..fabafc1 100644
--- a/src/filemanager/cmd.c
+++ b/src/filemanager/cmd.c
@@ -541,7 +541,7 @@ set_basic_panel_listing_to (int panel_index, int listing_mode)
 
 gboolean
 view_file_at_line (const vfs_path_t * filename_vpath, gboolean plain_view, gboolean internal,
-                   long start_line)
+                   long start_line, off_t search_start, off_t search_end)
 {
     gboolean ret = TRUE;
 
@@ -564,7 +564,7 @@ view_file_at_line (const vfs_path_t * filename_vpath, gboolean plain_view, gbool
         mcview_default_nroff_flag = 0;
         mcview_default_magic_flag = 0;
 
-        ret = mcview_viewer (NULL, filename_vpath, start_line);
+        ret = mcview_viewer (NULL, filename_vpath, start_line, search_start, search_end);
 
         if (changed_hex_mode && !mcview_altered_hex_mode)
             mcview_default_hex_mode = 1;
@@ -587,7 +587,7 @@ view_file_at_line (const vfs_path_t * filename_vpath, gboolean plain_view, gbool
         ret = (regex_command (filename_vpath, view_entry) == 0);
         if (ret)
         {
-            ret = mcview_viewer (NULL, filename_vpath, start_line);
+            ret = mcview_viewer (NULL, filename_vpath, start_line, search_start, search_end);
             dialog_switch_process_pending ();
         }
     }
@@ -623,7 +623,7 @@ view_file_at_line (const vfs_path_t * filename_vpath, gboolean plain_view, gbool
 gboolean
 view_file (const vfs_path_t * filename_vpath, gboolean plain_view, gboolean internal)
 {
-    return view_file_at_line (filename_vpath, plain_view, internal, 0);
+    return view_file_at_line (filename_vpath, plain_view, internal, 0, 0, 0);
 }
 
 
@@ -687,7 +687,7 @@ view_filtered_cmd (void)
 
     if (command != NULL)
     {
-        mcview_viewer (command, NULL, 0);
+        mcview_viewer (command, NULL, 0, 0, 0);
         g_free (command);
         dialog_switch_process_pending ();
     }
diff --git a/src/filemanager/cmd.h b/src/filemanager/cmd.h
index 892f1ce..33f713d 100644
--- a/src/filemanager/cmd.h
+++ b/src/filemanager/cmd.h
@@ -44,7 +44,7 @@ void smart_dirsize_cmd (void);
 void single_dirsize_cmd (void);
 void dirsizes_cmd (void);
 gboolean view_file_at_line (const vfs_path_t * filename_vpath, gboolean plain_view,
-                            gboolean internal, long start_line);
+                            gboolean internal, long start_line, off_t search_start, off_t search_end);
 gboolean view_file (const vfs_path_t * filename_vpath, gboolean normal, gboolean internal);
 void view_cmd (void);
 void view_file_cmd (void);
diff --git a/src/filemanager/ext.c b/src/filemanager/ext.c
index 2fa9ae5..b8f7da3 100644
--- a/src/filemanager/ext.c
+++ b/src/filemanager/ext.c
@@ -364,9 +364,9 @@ exec_extension_view (void *target, char *cmd, const vfs_path_t * filename_vpath,
         changed_nroff_flag = 1;
 
     if (target == NULL)
-        mcview_viewer (cmd, filename_vpath, start_line);
+        mcview_viewer (cmd, filename_vpath, start_line, 0, 0);
     else
-        mcview_load ((mcview_t *) target, cmd, vfs_path_as_str (filename_vpath), start_line);
+        mcview_load ((mcview_t *) target, cmd, vfs_path_as_str (filename_vpath), start_line, 0, 0);
 
     if (changed_hex_mode && !mcview_altered_hex_mode)
         mcview_default_hex_mode = def_hex_mode;
diff --git a/src/filemanager/find.c b/src/filemanager/find.c
index 1b829b3..9eb2b37 100644
--- a/src/filemanager/find.c
+++ b/src/filemanager/find.c
@@ -111,6 +111,13 @@ typedef struct
     char *ignore_dirs;
 } find_file_options_t;
 
+typedef struct
+{
+    char *dir;
+    gsize start;
+    gsize end;
+} find_match_location_t;
+
 /*** file scope variables ************************************************************************/
 
 /* button callbacks */
@@ -157,6 +164,8 @@ static struct timeval last_refresh;
 static gboolean resuming;
 static int last_line;
 static int last_pos;
+static off_t last_off;
+static int last_i;
 
 static size_t ignore_count = 0;
 
@@ -364,9 +373,20 @@ found_num_update (void)
 /* --------------------------------------------------------------------------------------------- */
 
 static void
-get_list_info (char **file, char **dir)
+get_list_info (char **file, char **dir, gsize *start, gsize *end)
 {
-    listbox_get_current (find_list, file, (void **) dir);
+    find_match_location_t *location = NULL;
+    listbox_get_current (find_list, file, (void **) &location);
+    if (location != NULL)
+    {
+      *dir = location->dir;
+      *start = location->start;
+      *end = location->end;
+    }
+    else
+    {
+      *dir = NULL;
+    }
 }
 
 /* --------------------------------------------------------------------------------------------- */
@@ -825,10 +845,11 @@ clear_stack (void)
 /* --------------------------------------------------------------------------------------------- */
 
 static void
-insert_file (const char *dir, const char *file)
+insert_file (const char *dir, const char *file, gsize start, gsize end)
 {
     char *tmp_name = NULL;
     static char *dirname = NULL;
+    find_match_location_t *location;
 
     while (IS_PATH_SEP (dir[0]) && IS_PATH_SEP (dir[1]))
         dir++;
@@ -849,16 +870,20 @@ insert_file (const char *dir, const char *file)
     }
 
     tmp_name = g_strdup_printf ("    %s", file);
-    add_to_list (tmp_name, dirname);
+    location = g_malloc (sizeof location);  // TODO FIXME how to free this?
+    location->dir = dirname;
+    location->start = start;
+    location->end = end;
+    add_to_list (tmp_name, location);
     g_free (tmp_name);
 }
 
 /* --------------------------------------------------------------------------------------------- */
 
 static void
-find_add_match (const char *dir, const char *file)
+find_add_match (const char *dir, const char *file, gsize start, gsize end)
 {
-    insert_file (dir, file);
+    insert_file (dir, file, start, end);
 
     /* Don't scroll */
     if (matches == 0)
@@ -967,11 +992,14 @@ search_content (WDialog * h, const char *directory, const char *filename)
         int line = 1;
         int pos = 0;
         int n_read = 0;
+        off_t off = 0;          /* file_fd's offset corresponding to strbuf[0] */
         gboolean found = FALSE;
         gsize found_len;
+        gsize found_start;
         char result[BUF_MEDIUM];
         char *strbuf = NULL;    /* buffer for fetched string */
         int strbuf_size = 0;
+        int i = -1;             /* compensate for a newline we'll add when we first enter the loop */
 
         if (resuming)
         {
@@ -979,12 +1007,15 @@ search_content (WDialog * h, const char *directory, const char *filename)
             resuming = FALSE;
             line = last_line;
             pos = last_pos;
+            off = last_off;
+            i = last_i;
         }
 
         while (!ret_val)
         {
             char ch = '\0';
-            int i = 0;
+            off += i + 1;       /* the previous line, plus a newline character */
+            i = 0;
 
             /* read to buffer and get line from there */
             while (TRUE)
@@ -1002,7 +1033,10 @@ search_content (WDialog * h, const char *directory, const char *filename)
                 {
                     /* skip possible leading zero(s) */
                     if (i == 0)
+                    {
+                        off++;
                         continue;
+	            }
                     break;
                 }
 
@@ -1045,7 +1079,8 @@ search_content (WDialog * h, const char *directory, const char *filename)
                 }
 
                 g_snprintf (result, sizeof (result), "%d:%s", line, filename);
-                find_add_match (directory, result);
+                found_start = off + search_content_handle->normal_offset + 1; /* off by one ouch: ticket 3280 */
+                find_add_match (directory, result, found_start, found_start + found_len);
                 found = TRUE;
             }
 
@@ -1073,6 +1108,8 @@ search_content (WDialog * h, const char *directory, const char *filename)
                     resuming = TRUE;
                     last_line = line;
                     last_pos = pos;
+                    last_off = off;
+                    last_i = i;
                     ret_val = TRUE;
                     break;
                 default:
@@ -1301,7 +1338,7 @@ do_search (WDialog * h)
             if (search_ok)
             {
                 if (content_pattern == NULL)
-                    find_add_match (directory, dp->d_name);
+                    find_add_match (directory, dp->d_name, 0, 0);
                 else if (search_content (h, directory, dp->d_name))
                     return 1;
             }
@@ -1336,7 +1373,7 @@ init_find_vars (void)
 /* --------------------------------------------------------------------------------------------- */
 
 static void
-find_do_view_edit (gboolean unparsed_view, gboolean edit, char *dir, char *file)
+find_do_view_edit (gboolean unparsed_view, gboolean edit, char *dir, char *file, off_t search_start, off_t search_end)
 {
     char *fullname = NULL;
     const char *filename = NULL;
@@ -1358,7 +1395,7 @@ find_do_view_edit (gboolean unparsed_view, gboolean edit, char *dir, char *file)
     if (edit)
         edit_file_at_line (fullname_vpath, use_internal_edit != 0, line);
     else
-        view_file_at_line (fullname_vpath, unparsed_view, use_internal_view != 0, line);
+        view_file_at_line (fullname_vpath, unparsed_view, use_internal_view != 0, line, search_start, search_end);
     vfs_path_free (fullname_vpath);
     g_free (fullname);
 }
@@ -1368,15 +1405,15 @@ find_do_view_edit (gboolean unparsed_view, gboolean edit, char *dir, char *file)
 static cb_ret_t
 view_edit_currently_selected_file (gboolean unparsed_view, gboolean edit)
 {
-    char *dir = NULL;
     char *text = NULL;
+    find_match_location_t *location;
 
-    listbox_get_current (find_list, &text, (void **) &dir);
+    listbox_get_current (find_list, &text, (void **) &location);
 
-    if ((text == NULL) || (dir == NULL))
+    if ((text == NULL) || (location == NULL) || (location->dir == NULL))
         return MSG_NOT_HANDLED;
 
-    find_do_view_edit (unparsed_view, edit, dir, text);
+    find_do_view_edit (unparsed_view, edit, location->dir, text, location->start, location->end);
     return MSG_HANDLED;
 }
 
@@ -1628,6 +1665,7 @@ do_find (const char *start_dir, ssize_t start_dir_len, const char *ignore_dirs,
 {
     int return_value = 0;
     char *dir_tmp = NULL, *file_tmp = NULL;
+    gsize start, len;
 
     setup_gui ();
 
@@ -1647,7 +1685,7 @@ do_find (const char *start_dir, ssize_t start_dir_len, const char *ignore_dirs,
     /* Clear variables */
     init_find_vars ();
 
-    get_list_info (&file_tmp, &dir_tmp);
+    get_list_info (&file_tmp, &dir_tmp, &start, &len);
 
     if (dir_tmp)
         *dirname = g_strdup (dir_tmp);
@@ -1670,9 +1708,10 @@ do_find (const char *start_dir, ssize_t start_dir_len, const char *ignore_dirs,
         {
             const char *lc_filename = NULL;
             WLEntry *le = LENTRY (entry->data);
+            find_match_location_t *location = le->data;
             char *p;
 
-            if ((le->text == NULL) || (le->data == NULL))
+            if ((le->text == NULL) || (location == NULL) || (location->dir == NULL))
                 continue;
 
             if (content_pattern != NULL)
@@ -1680,7 +1719,7 @@ do_find (const char *start_dir, ssize_t start_dir_len, const char *ignore_dirs,
             else
                 lc_filename = le->text + 4;
 
-            name = mc_build_filename (le->data, lc_filename, (char *) NULL);
+            name = mc_build_filename (location->dir, lc_filename, (char *) NULL);
             /* skip initial start dir */
             if (start_dir_len < 0)
                 p = name;
diff --git a/src/filemanager/layout.c b/src/filemanager/layout.c
index adc068e..bf6c26a 100644
--- a/src/filemanager/layout.c
+++ b/src/filemanager/layout.c
@@ -1020,7 +1020,7 @@ set_display_type (int num, panel_view_mode_t type)
         else
             file_name = "";
 
-        mcview_load ((struct mcview_struct *) new_widget, 0, file_name, 0);
+        mcview_load ((struct mcview_struct *) new_widget, 0, file_name, 0, 0, 0);
         break;
 
     default:
diff --git a/src/filemanager/usermenu.c b/src/filemanager/usermenu.c
index fc593b5..2d7d5f8 100644
--- a/src/filemanager/usermenu.c
+++ b/src/filemanager/usermenu.c
@@ -550,7 +550,7 @@ execute_menu_command (WEdit * edit_widget, const char *commands, gboolean show_p
     mc_chmod (file_name_vpath, S_IRWXU);
     if (run_view)
     {
-        mcview_viewer (vfs_path_as_str (file_name_vpath), NULL, 0);
+        mcview_viewer (vfs_path_as_str (file_name_vpath), NULL, 0, 0, 0);
         dialog_switch_process_pending ();
     }
     else
diff --git a/src/viewer/actions_cmd.c b/src/viewer/actions_cmd.c
index 20fdbf1..492dcfa 100644
--- a/src/viewer/actions_cmd.c
+++ b/src/viewer/actions_cmd.c
@@ -210,7 +210,7 @@ mcview_hook (void *v)
 
     mcview_done (view);
     mcview_init (view);
-    mcview_load (view, 0, panel->dir.list[panel->selected].fname, 0);
+    mcview_load (view, 0, panel->dir.list[panel->selected].fname, 0, 0, 0);
     mcview_display (view);
 }
 
@@ -369,7 +369,7 @@ mcview_load_next_prev (mcview_t * view, int direction)
     mcview_remove_ext_script (view);
     mcview_init (view);
     if (regex_command_for (view, vfile, "View", &ext_script) == 0)
-        mcview_load (view, NULL, vfs_path_as_str (vfile), 0);
+        mcview_load (view, NULL, vfs_path_as_str (vfile), 0, 0, 0);
     vfs_path_free (vfile);
     view->dir = dir;
     view->dir_idx = dir_idx;
diff --git a/src/viewer/lib.c b/src/viewer/lib.c
index 2528c10..4d72f60 100644
--- a/src/viewer/lib.c
+++ b/src/viewer/lib.c
@@ -91,7 +91,7 @@ mcview_toggle_magic_mode (mcview_t * view)
     view->dir_idx = NULL;
     mcview_done (view);
     mcview_init (view);
-    mcview_load (view, command, filename, 0);
+    mcview_load (view, command, filename, 0, 0, 0);
     view->dir = dir;
     view->dir_idx = dir_idx;
     g_free (filename);
diff --git a/src/viewer/mcviewer.c b/src/viewer/mcviewer.c
index a34099b..4dffd11 100644
--- a/src/viewer/mcviewer.c
+++ b/src/viewer/mcviewer.c
@@ -232,7 +232,7 @@ mcview_new (int y, int x, int lines, int cols, gboolean is_panel)
 /** Real view only */
 
 gboolean
-mcview_viewer (const char *command, const vfs_path_t * file_vpath, int start_line)
+mcview_viewer (const char *command, const vfs_path_t * file_vpath, int start_line, off_t search_start, off_t search_end)
 {
     gboolean succeeded;
     mcview_t *lc_mcview;
@@ -249,7 +249,7 @@ mcview_viewer (const char *command, const vfs_path_t * file_vpath, int start_lin
 
     view_dlg->get_title = mcview_get_title;
 
-    succeeded = mcview_load (lc_mcview, command, vfs_path_as_str (file_vpath), start_line);
+    succeeded = mcview_load (lc_mcview, command, vfs_path_as_str (file_vpath), start_line, search_start, search_end);
 
     if (succeeded)
         dlg_run (view_dlg);
@@ -267,7 +267,7 @@ mcview_viewer (const char *command, const vfs_path_t * file_vpath, int start_lin
 /* --------------------------------------------------------------------------------------------- */
 
 gboolean
-mcview_load (mcview_t * view, const char *command, const char *file, int start_line)
+mcview_load (mcview_t * view, const char *command, const char *file, int start_line, off_t search_start, off_t search_end)
 {
     gboolean retval = FALSE;
     vfs_path_t *vpath = NULL;
@@ -409,8 +409,6 @@ mcview_load (mcview_t * view, const char *command, const char *file, int start_l
     mcview_state_machine_init (&view->dpy_state_top, 0);
     view->dpy_wrap_dirty = FALSE;
     view->force_max = -1;
-    view->search_start = 0;
-    view->search_end = 0;
     view->dpy_text_column = 0;
 
     mcview_compute_areas (view);
@@ -441,6 +439,8 @@ mcview_load (mcview_t * view, const char *command, const char *file, int start_l
     else if (start_line > 0)
         mcview_moveto (view, start_line - 1, 0);
 
+    view->search_start = search_start;
+    view->search_end = search_end;
     view->hexedit_lownibble = FALSE;
     view->hexview_in_text = FALSE;
     view->change_list = NULL;
diff --git a/src/viewer/mcviewer.h b/src/viewer/mcviewer.h
index e68642b..89c4073 100644
--- a/src/viewer/mcviewer.h
+++ b/src/viewer/mcviewer.h
@@ -43,10 +43,11 @@ extern mcview_t *mcview_new (int y, int x, int lines, int cols, gboolean is_pane
 /* Shows {file} or the output of {command} in the internal viewer,
  * starting in line {start_line}.
  */
-extern gboolean mcview_viewer (const char *command, const vfs_path_t * file_vpath, int start_line);
+extern gboolean mcview_viewer (const char *command, const vfs_path_t * file_vpath, int start_line,
+                               off_t search_start, off_t search_end);
 
 extern gboolean mcview_load (mcview_t * view, const char *command, const char *file,
-                             int start_line);
+                             int start_line, off_t search_start, off_t search_end);
 
 /*** inline functions ****************************************************************************/
 #endif /* MC__VIEWER_H */
