Index: edit/editcmd_dialogs.c
===================================================================
--- edit/editcmd_dialogs.c (revision e983e9eedcfba8efbd5a67bd17b940d8bf803aa6)
+++ edit/editcmd_dialogs.c (revision edb5d0f62ee3d68f6662c4a27bb7fbecb9e5dbc9)
@@ -136,14 +136,12 @@
 editcmd_dialog_search_show (WEdit * edit, char **search_text)
 {
-
     if (*search_text == '\0')
         *search_text = INPUT_LAST_TEXT;
 
     {
+	int i;
 	gchar **list_of_types = mc_search_get_types_strings_array();
 	int SEARCH_DLG_HEIGHT = SEARCH_DLG_MIN_HEIGHT + g_strv_length (list_of_types) - SEARCH_DLG_HEIGHT_SUPPLY;
 
-	int i;
-	int btn_pos, dlg_width;
 	int dialog_result;
 
@@ -179,4 +177,10 @@
 	};
 
+#ifdef HAVE_CHARSET
+	int last_checkbox = 7;
+#else
+	int last_checkbox = 6;
+#endif
+
 	QuickDialog Quick_input =
 	{
@@ -187,28 +191,60 @@
 
 #ifdef ENABLE_NLS
-	/* butons */
+	/* header title */
+	Quick_input.title = _(Quick_input.title);
+	/* buttons */
 	for (i = 0; i < 3; i++)
 	    quick_widgets[i].u.button.text = _(quick_widgets[i].u.button.text);
 	/* checkboxes */
-	for (i = 3; i < 8; i++)
+	for (i = 3; i <= last_checkbox; i++)
 	    quick_widgets[i].u.checkbox.text = _(quick_widgets[i].u.checkbox.text);
 	/* label */
 	quick_widgets[10].u.label.text = _(quick_widgets[10].u.label.text);
 #endif
-	/* calculate button positions */
-	btn_pos = 7;
-
-	for (i = 2; i >= 0; i--) {
-	    quick_widgets[i].relative_x = btn_pos;
-	    btn_pos += str_term_width1 (quick_widgets[i].u.button.text) + 7;
-	    if (i == 2) /* default button */
-		btn_pos += 2;
+
+	/* calculate widget coordinates */
+	{
+	    int len = 0;
+	    int dlg_width;
+	    gchar **radio = list_of_types;
+	    int button_gap, b0_len, b1_len, b2_len;
+
+	    /* length of radiobuttons */
+            while (*radio != NULL) {
+		len = max (len, str_term_width1 (*radio));
+		radio++;
+	    }
+	    /* length of checkboxes */
+	    for (i = 3; i <= last_checkbox; i++)
+		len = max (len, str_term_width1 (quick_widgets[i].u.checkbox.text) + 4);
+
+	    /* preliminary dialog width */
+	    dlg_width = max (len * 2, str_term_width1 (Quick_input.title)) + 4;
+
+	    /* length of buttons */
+	    b0_len = str_term_width1 (quick_widgets[0].u.button.text) + 3;
+	    b1_len = str_term_width1 (quick_widgets[1].u.button.text) + 3;
+	    b2_len = str_term_width1 (quick_widgets[2].u.button.text) + 5;
+	    len = b0_len + b1_len + b2_len + 8;
+
+	    /* dialog width */
+	    Quick_input.xlen = max (SEARCH_DLG_WIDTH, max (dlg_width, len));
+
+	    /* correct widget coordinates */
+	    for (i = 0; i < sizeof (quick_widgets)/sizeof (quick_widgets[0]); i++)
+		quick_widgets[i].x_divisions = Quick_input.xlen;
+
+		quick_widgets[9].u.input.len = Quick_input.xlen - 6;
+
+	    /* checkbox positions */
+	    for (i = 3; i <= last_checkbox; i++)
+		quick_widgets[i].relative_x = Quick_input.xlen/2 + 2;
+
+	    /* button positions */
+	    button_gap = ( Quick_input.xlen - len)/4;
+	    quick_widgets[2].relative_x = 4 + button_gap;
+	    quick_widgets[1].relative_x = 4 + button_gap*2 + b2_len;
+	    quick_widgets[0].relative_x = Quick_input.xlen - 4 - button_gap - b0_len;
 	}
-
-	dlg_width = btn_pos + 2;
-
-	/* correct widget coordinates */
-	for (i = 0; i < sizeof (quick_widgets)/sizeof (quick_widgets[0]); i++)
-	    quick_widgets[i].x_divisions = dlg_width;
 
 	dialog_result = quick_dialog (&Quick_input);
Index: po/ru.po
===================================================================
--- po/ru.po (revision 32aa4c98c1e56d712874c2c409199fecfb07f39f)
+++ po/ru.po (revision edb5d0f62ee3d68f6662c4a27bb7fbecb9e5dbc9)
@@ -362,7 +362,6 @@
 msgstr " Введите строку для поиска:"
 
-#, fuzzy
 msgid "&Find all"
-msgstr "Поиск файла"
+msgstr "На&йти всё"
 
 msgid "Cancel"
