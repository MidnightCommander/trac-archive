From 28603804788cc6e24d742d970ba725080c3b9e53 Mon Sep 17 00:00:00 2001
From: Vit Rosin <vit_r@list.ru>
Date: Fri, 19 Feb 2010 14:53:53 +0000
Subject: [PATCH]  missing retcheck of g_strdup_printf in logging.c

---
 lib/logging.c |   54 +++++++++++++++++++++++++++++-------------------------
 1 files changed, 29 insertions(+), 25 deletions(-)

diff --git a/lib/logging.c b/lib/logging.c
index c9de5d3..0f96e7d 100644
--- a/lib/logging.c
+++ b/lib/logging.c
@@ -42,36 +42,40 @@
 /*** file scope functions **********************************************/
 
 static gboolean
-is_logging_enabled(void)
+is_logging_enabled (void)
 {
-	static gboolean logging_initialized = FALSE;
-	static gboolean logging_enabled = FALSE;
-
-	if (!logging_initialized) {
-		logging_enabled = mc_config_get_int (mc_main_config,
-		        CONFIG_APP_SECTION, "development.enable_logging", FALSE);
-		logging_initialized = TRUE;
-	}
-	return logging_enabled;
+    static gboolean logging_initialized = FALSE;
+    static gboolean logging_enabled = FALSE;
+
+    if (!logging_initialized) {
+        logging_enabled = (gboolean) mc_config_get_int (mc_main_config,
+                CONFIG_APP_SECTION, "development.enable_logging", FALSE);
+        logging_initialized = TRUE;
+    }
+    return logging_enabled;
 }
 
 /*** public functions **************************************************/
 
 void
-mc_log(const char *fmt, ...)
+mc_log (const char *fmt, ...)
 {
-	va_list args;
-	FILE *f;
-	char *logfilename;
-
-	if (is_logging_enabled()) {
-		va_start(args, fmt);
-		logfilename = g_strdup_printf("%s/%s/log", home_dir, MC_USERCONF_DIR);
-		if ((f = fopen(logfilename, "a")) != NULL) {
-			(void)vfprintf(f, fmt, args);
-			(void)fclose(f);
-		}
-		g_free(logfilename);
-		va_end(args);
-	}
+    va_list args;
+    FILE *f;
+    char *logfilename;
+
+    if (is_logging_enabled ()) {
+        logfilename = g_strdup_printf ("%s/%s/log", home_dir, MC_USERCONF_DIR);
+        if (logfilename == NULL)
+            return;
+
+        va_start (args, fmt);
+        f = fopen (logfilename, "a");
+        g_free (logfilename);
+        if (f != NULL) {
+            (void) vfprintf (f, fmt, args);
+            (void) fclose (f);
+        }
+        va_end (args);
+    }
 }
-- 
1.6.4

