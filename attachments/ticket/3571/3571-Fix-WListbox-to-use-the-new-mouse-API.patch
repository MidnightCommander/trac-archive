From fcf8041795214c80629a4e3d110a747173480652 Mon Sep 17 00:00:00 2001
From: Mooffie <mooffie@gmail.com>
Date: Thu, 26 Nov 2015 00:31:53 +0200
Subject: [PATCH] Fix WListbox to use the new mouse API.

---
 lib/widget/listbox.c | 97 ++++++++++++++++++++++------------------------------
 1 file changed, 40 insertions(+), 57 deletions(-)

diff --git a/lib/widget/listbox.c b/lib/widget/listbox.c
index ef39d4d..44d0b65 100644
--- a/lib/widget/listbox.c
+++ b/lib/widget/listbox.c
@@ -468,75 +468,57 @@ listbox_callback (Widget * w, Widget * sender, widget_msg_t msg, int parm, void
 
 /* --------------------------------------------------------------------------------------------- */
 
-static int
-listbox_event (Gpm_Event * event, void *data)
+static void
+listbox_mouse_callback (Widget * w, mouse_msg_t msg, mouse_event_t * event)
 {
-    WListbox *l = LISTBOX (data);
-    Widget *w = WIDGET (data);
-
-    if (!mouse_global_in_widget (event, w))
-        return MOU_UNHANDLED;
+    WListbox *l = LISTBOX (w);
 
-    /* Single click */
-    if ((event->type & GPM_DOWN) != 0)
+    switch (msg)
+    {
+    case MSG_MOUSE_DOWN:
         dlg_select_widget (l);
+        listbox_select_entry (l, listbox_select_pos (l, l->top, event->y));
+        break;
 
-    if (listbox_is_empty (l))
-        return MOU_NORMAL;
-
-    if ((event->type & (GPM_DOWN | GPM_DRAG)) != 0)
-    {
-        int ret = MOU_REPEAT;
-        Gpm_Event local;
-        int i;
+    case MSG_MOUSE_SCROLL_UP:
+        listbox_back (l);
+        break;
 
-        local = mouse_get_local (event, w);
-        if (local.y < 1)
-            for (i = -local.y; i >= 0; i--)
-                listbox_back (l);
-        else if (local.y > w->lines)
-            for (i = local.y - w->lines; i > 0; i--)
-                listbox_fwd (l);
-        else if ((local.buttons & GPM_B_UP) != 0)
-        {
-            listbox_back (l);
-            ret = MOU_NORMAL;
-        }
-        else if ((local.buttons & GPM_B_DOWN) != 0)
-        {
-            listbox_fwd (l);
-            ret = MOU_NORMAL;
-        }
-        else
-            listbox_select_entry (l, listbox_select_pos (l, l->top, local.y - 1));
+    case MSG_MOUSE_SCROLL_DOWN:
+        listbox_fwd (l);
+        break;
 
-        listbox_draw (l, TRUE);
-        return ret;
-    }
+    case MSG_MOUSE_DRAG:
+        event->result.repeat = TRUE;    /* It'd be functional even without this. */
+        listbox_select_entry (l, listbox_select_pos (l, l->top, event->y));
+        break;
 
-    /* Double click */
-    if ((event->type & (GPM_DOUBLE | GPM_UP)) == (GPM_UP | GPM_DOUBLE))
-    {
-        Gpm_Event local;
-        int action;
+    case MSG_MOUSE_CLICK:
 
-        local = mouse_get_local (event, w);
-        dlg_select_widget (l);
-        listbox_select_entry (l, listbox_select_pos (l, l->top, local.y - 1));
+        if ((event->count & GPM_DOUBLE) != 0)   /* Double click */
+        {
+            int action;
 
-        if (l->callback != NULL)
-            action = l->callback (l);
-        else
-            action = LISTBOX_DONE;
+            if (l->callback != NULL)
+                action = l->callback (l);
+            else
+                action = LISTBOX_DONE;
 
-        if (action == LISTBOX_DONE)
-        {
-            w->owner->ret_value = B_ENTER;
-            dlg_stop (w->owner);
+            if (action == LISTBOX_DONE)
+            {
+                w->owner->ret_value = B_ENTER;
+                dlg_stop (w->owner);
+            }
         }
+
+        break;
+
+    default:
+        break;
     }
 
-    return MOU_NORMAL;
+    if (msg != MSG_MOUSE_UP)
+        listbox_draw (l, TRUE);
 }
 
 /* --------------------------------------------------------------------------------------------- */
@@ -554,7 +536,8 @@ listbox_new (int y, int x, int height, int width, gboolean deletable, lcback_fn
 
     l = g_new (WListbox, 1);
     w = WIDGET (l);
-    widget_init (w, y, x, height, width, listbox_callback, listbox_event);
+    widget_init (w, y, x, height, width, listbox_callback, NULL);
+    set_easy_mouse_callback (w, listbox_mouse_callback);
 
     l->list = NULL;
     l->top = l->pos = 0;
-- 
2.1.4

