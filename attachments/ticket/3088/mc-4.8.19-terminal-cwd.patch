diff --git a/doc/man/mc.1.in b/doc/man/mc.1.in
index da3c9720c..3d152451f 100644
--- a/doc/man/mc.1.in
+++ b/doc/man/mc.1.in
@@ -1967,6 +1967,11 @@ unintentionally becomes more difficult.  The default selection in the
 confirmation dialogs for deletion changes from "Yes" to "No".
 This option is disabled by default.
 .PP
+.I Auto cd new terminal.
+If this option is enabled, mc tells its current directory to the terminal.
+Some graphical terminal emulators use this information to open new windows
+or tabs in that directory.
+.PP
 .I Auto save setup.
 If this option is enabled, when you exit Midnight Commander, the
 configurable options of Midnight Commander are saved in the
diff --git a/src/execute.c b/src/execute.c
index 5bb017f00..f6544f26a 100644
--- a/src/execute.c
+++ b/src/execute.c
@@ -371,6 +371,7 @@ do_executev (const char *shell, int flags, char *const argv[])
     {
         update_panels (UP_OPTIMIZE, UP_KEEPSEL);
         update_xterm_title_path ();
+        update_terminal_cwd ();
     }
 
     do_refresh ();
@@ -551,6 +552,7 @@ toggle_panels (void)
     {
         update_panels (UP_OPTIMIZE, UP_KEEPSEL);
         update_xterm_title_path ();
+        update_terminal_cwd ();
     }
 
     if (was_sigwinch != 0 || mc_global.tty.winch_flag != 0)
diff --git a/src/filemanager/boxes.c b/src/filemanager/boxes.c
index 90dc6e052..0f164d5ce 100644
--- a/src/filemanager/boxes.c
+++ b/src/filemanager/boxes.c
@@ -546,10 +546,10 @@ configure_box (void)
                     QUICK_CHECKBOX (N_("Rotating d&ash"), &nice_rotating_dash, NULL),
                     QUICK_CHECKBOX (N_("Cd follows lin&ks"), &mc_global.vfs.cd_symlinks, NULL),
                     QUICK_CHECKBOX (N_("Sa&fe delete"), &safe_delete, NULL),
+                    QUICK_CHECKBOX (N_("Auto cd new terminal"), &auto_cd_new_terminal, NULL),  // TODO: shortcut key!
                     QUICK_CHECKBOX (N_("A&uto save setup"), &auto_save_setup, NULL),
                     QUICK_SEPARATOR (FALSE),
                     QUICK_SEPARATOR (FALSE),
-                    QUICK_SEPARATOR (FALSE),
                 QUICK_STOP_GROUPBOX,
             QUICK_STOP_COLUMNS,
             QUICK_BUTTONS_OK_CANCEL,
diff --git a/src/filemanager/layout.c b/src/filemanager/layout.c
index 10f06643c..d9194ea11 100644
--- a/src/filemanager/layout.c
+++ b/src/filemanager/layout.c
@@ -791,6 +791,7 @@ setup_panels (void)
         widget_set_size (WIDGET (the_hint), 0, 0, 0, 0);
 
     update_xterm_title_path ();
+    update_terminal_cwd ();
 }
 
 /* --------------------------------------------------------------------------------------------- */
@@ -1437,3 +1438,34 @@ update_xterm_title_path (void)
 }
 
 /* --------------------------------------------------------------------------------------------- */
+
+/** Tell the current directory to the terminal so it can open new tabs there */
+void
+update_terminal_cwd (void)
+{
+    if (mc_global.tty.xterm_flag && auto_cd_new_terminal && vfs_current_is_local ())
+    {
+        const gchar *host;
+        char *path;
+        int pathlen, i;
+        unsigned char c;
+
+        host = g_get_host_name ();
+        path = vfs_path_to_str_flags (current_panel->cwd_vpath, 0, VPF_NONE);
+        pathlen = strlen (path);
+
+        fprintf (stdout, "\33]7;file://%s", host);
+        for (i = 0; i < pathlen; i++) {
+            c = path[i];
+	    if ((c >= '0' && c <= '9') || ((c & ~0x20) >= 'A' && (c & ~0x20) <= 'Z') || index("/_.-()~", c) != NULL)
+                fprintf(stdout, "%c", c);
+	    else
+	        fprintf(stdout, "%%%02X", c);
+        }
+        fprintf (stdout, "\7");
+        (void) fflush (stdout);
+        g_free (path);
+    }
+}
+
+/* --------------------------------------------------------------------------------------------- */
diff --git a/src/filemanager/layout.h b/src/filemanager/layout.h
index a8658382a..5d281c024 100644
--- a/src/filemanager/layout.h
+++ b/src/filemanager/layout.h
@@ -90,6 +90,7 @@ int load_prompt (int fd, void *unused);
 #endif
 
 void update_xterm_title_path (void);
+void update_terminal_cwd (void);
 
 void title_path_prepare (char **path, char **login);
 
diff --git a/src/filemanager/panel.c b/src/filemanager/panel.c
index 039ec7ccc..9107d5312 100644
--- a/src/filemanager/panel.c
+++ b/src/filemanager/panel.c
@@ -3311,6 +3311,7 @@ _do_panel_cd (WPanel * panel, const vfs_path_t * new_dir_vpath, enum cd_enum cd_
     load_hint (FALSE);
     panel->dirty = 1;
     update_xterm_title_path ();
+    update_terminal_cwd ();
 
     vfs_path_free (olddir_vpath);
 
@@ -3691,6 +3692,7 @@ panel_callback (Widget * w, Widget * sender, widget_msg_t msg, int parm, void *d
             subshell_chdir (panel->cwd_vpath);
 
         update_xterm_title_path ();
+        update_terminal_cwd ();
         select_item (panel);
 
         bb = find_buttonbar (w->owner);
diff --git a/src/setup.c b/src/setup.c
index 430075ced..f0e0d7788 100644
--- a/src/setup.c
+++ b/src/setup.c
@@ -114,6 +114,9 @@ gboolean confirm_view_dir = FALSE;
 /* Ask file name before start the editor */
 gboolean editor_ask_filename_before_edit = FALSE;
 
+/* Tell cwd to the terminal so it can open new tabs there */
+gboolean auto_cd_new_terminal = 0;
+
 panel_view_mode_t startup_left_mode;
 panel_view_mode_t startup_right_mode;
 
@@ -352,6 +355,7 @@ static const struct
     { "mcview_remember_file_position", &mcview_remember_file_position },
     { "auto_fill_mkdir_name", &auto_fill_mkdir_name },
     { "copymove_persistent_attr", &copymove_persistent_attr },
+    { "auto_cd_new_terminal", &auto_cd_new_terminal },
     { NULL, NULL }
 };
 
diff --git a/src/setup.h b/src/setup.h
index b483d7da9..13729fe06 100644
--- a/src/setup.h
+++ b/src/setup.h
@@ -98,6 +98,7 @@ extern gboolean output_starts_shell;
 extern gboolean use_file_to_check_type;
 extern gboolean file_op_compute_totals;
 extern gboolean editor_ask_filename_before_edit;
+extern gboolean auto_cd_new_terminal;
 
 extern panels_options_t panels_options;
 
