Index: mc-4.8.11/lib/keybind.c
===================================================================
--- mc-4.8.11.orig/lib/keybind.c	2014-02-07 19:27:58.128770525 +0400
+++ mc-4.8.11/lib/keybind.c	2014-02-07 19:27:58.124770525 +0400
@@ -176,6 +176,7 @@
     {"Jobs", CK_Jobs},
 #endif
     {"OptionsLayout", CK_OptionsLayout},
+    {"OptionsAppearance", CK_OptionsAppearance},
     {"Link", CK_Link},
     {"PanelListingChange", CK_PanelListingChange},
     {"PanelListing", CK_PanelListing},
Index: mc-4.8.11/lib/keybind.h
===================================================================
--- mc-4.8.11.orig/lib/keybind.h	2014-02-07 19:27:58.128770525 +0400
+++ mc-4.8.11/lib/keybind.h	2014-02-07 19:27:58.128770525 +0400
@@ -155,6 +155,7 @@
     CK_PanelInfo,
     CK_Jobs,
     CK_OptionsLayout,
+    CK_OptionsAppearance,
     CK_Link,
     CK_PanelListing,
     CK_ListMode,
Index: mc-4.8.11/lib/skin.h
===================================================================
--- mc-4.8.11.orig/lib/skin.h	2014-02-07 19:27:58.128770525 +0400
+++ mc-4.8.11/lib/skin.h	2014-02-07 19:27:58.128770525 +0400
@@ -129,7 +129,7 @@
 
 /*** declarations of public functions ************************************************************/
 
-gboolean mc_skin_init (GError **);
+gboolean mc_skin_init (const gchar *, GError **);
 void mc_skin_deinit (void);
 
 int mc_skin_color_get (const gchar *, const gchar *);
@@ -138,4 +138,6 @@
 
 gchar *mc_skin_get (const gchar *, const gchar *, const gchar *);
 
+GArray * mc_skin_list (void);
+
 #endif /* MC_SKIN_H */
Index: mc-4.8.11/lib/skin/colors.c
===================================================================
--- mc-4.8.11.orig/lib/skin/colors.c	2014-02-07 19:27:58.128770525 +0400
+++ mc-4.8.11/lib/skin/colors.c	2014-02-07 19:27:58.128770525 +0400
@@ -178,6 +178,7 @@
 }
 
 /* --------------------------------------------------------------------------------------------- */
+
 static void
 mc_skin_color_cache_init (void)
 {
Index: mc-4.8.11/lib/skin/common.c
===================================================================
--- mc-4.8.11.orig/lib/skin/common.c	2014-02-07 19:27:58.128770525 +0400
+++ mc-4.8.11/lib/skin/common.c	2014-02-07 19:27:58.128770525 +0400
@@ -110,13 +110,14 @@
 /* --------------------------------------------------------------------------------------------- */
 
 gboolean
-mc_skin_init (GError ** error)
+mc_skin_init (const gchar *skin_override, GError ** error)
 {
     gboolean is_good_init = TRUE;
 
     mc_skin__default.have_256_colors = FALSE;
 
-    mc_skin__default.name = mc_skin_get_default_name ();
+    mc_skin__default.name =
+        skin_override != NULL ? g_strdup(skin_override) : mc_skin_get_default_name ();
 
     mc_skin__default.colors = g_hash_table_new_full (g_str_hash, g_str_equal,
                                                      g_free, mc_skin_hash_destroy_value);
@@ -165,6 +166,9 @@
 void
 mc_skin_deinit (void)
 {
+    tty_color_free_all_tmp ();
+    tty_color_free_all_non_tmp ();
+
     g_free (mc_skin__default.name);
     mc_skin__default.name = NULL;
     g_hash_table_destroy (mc_skin__default.colors);
Index: mc-4.8.11/lib/skin/ini-file.c
===================================================================
--- mc-4.8.11.orig/lib/skin/ini-file.c	2014-02-07 19:27:58.128770525 +0400
+++ mc-4.8.11/lib/skin/ini-file.c	2014-02-07 19:27:58.128770525 +0400
@@ -27,6 +27,8 @@
 #include <config.h>
 #include <string.h>
 
+#include "lib/global.h"         /* <glib.h> */
+
 #include "internal.h"
 #include "lib/fileloc.h"
 #include "lib/util.h"           /* exist_file() */
@@ -43,6 +45,48 @@
 
 /* --------------------------------------------------------------------------------------------- */
 
+static void
+mc_skin_get_list_from_dir (const gchar * base_dir, GArray * list)
+{
+    unsigned int i;
+    char *dir_name;
+    DIR *dir;
+    gchar *name;
+
+    dir_name = g_build_filename (base_dir, MC_SKINS_SUBDIR, NULL);
+    dir = opendir (dir_name);
+    if (dir != NULL) {
+        struct dirent *de;
+        while ((de = readdir(dir)) != NULL) {
+            if (!strcmp(de->d_name, ".") || !strcmp(de->d_name, ".."))
+                continue;
+            if (strlen(de->d_name) > 4 && !strcmp(de->d_name + strlen(de->d_name) - 4, ".ini"))
+                de->d_name[strlen(de->d_name) - 4] = '\0';
+            for (i = 0; i < list->len; i++) {
+                if (!strcmp(de->d_name, g_array_index(list, gchar *, i)))
+                    break;
+            }
+            if (i < list->len)
+                continue;
+            name = g_strdup(de->d_name);
+            g_array_append_val(list, name);
+        }
+        closedir(dir);
+    }
+    g_free(dir_name);
+}
+
+/* --------------------------------------------------------------------------------------------- */
+
+static int string_array_comparator (gconstpointer a, gconstpointer b)
+{
+    char *aa = *(char **) a;
+    char *bb = *(char **) b;
+    return strcmp(aa, bb);
+}
+
+/* --------------------------------------------------------------------------------------------- */
+
 static gboolean
 mc_skin_ini_file_load_search_in_dir (mc_skin_t * mc_skin, const gchar * base_dir)
 {
@@ -75,6 +119,19 @@
 /*** public functions ****************************************************************************/
 /* --------------------------------------------------------------------------------------------- */
 
+GArray *
+mc_skin_list (void)
+{
+    GArray *list = g_array_new(FALSE, FALSE, sizeof(gchar *));
+    mc_skin_get_list_from_dir(mc_config_get_data_path (), list);
+    mc_skin_get_list_from_dir(mc_global.sysconfig_dir, list);
+    mc_skin_get_list_from_dir(mc_global.share_data_dir, list);
+    g_array_sort(list, (GCompareFunc) string_array_comparator);
+    return list;
+}
+
+/* --------------------------------------------------------------------------------------------- */
+
 gboolean
 mc_skin_ini_file_load (mc_skin_t * mc_skin)
 {
Index: mc-4.8.11/lib/widget/dialog.c
===================================================================
--- mc-4.8.11.orig/lib/widget/dialog.c	2014-02-07 19:27:58.128770525 +0400
+++ mc-4.8.11/lib/widget/dialog.c	2014-02-07 19:27:58.128770525 +0400
@@ -51,6 +51,7 @@
 /* Color styles for normal and error dialogs */
 dlg_colors_t dialog_colors;
 dlg_colors_t alarm_colors;
+dlg_colors_t listbox_colors;
 
 /* Primitive way to check if the the current dialog is our dialog */
 /* This is needed by async routines like load_prompt */
@@ -780,8 +781,7 @@
 
     new_d->state = DLG_CONSTRUCT;
     new_d->modal = modal;
-    if (colors != NULL)
-        memmove (new_d->color, colors, sizeof (dlg_colors_t));
+    new_d->color = colors;
     new_d->help_ctx = help_ctx;
     new_d->flags = flags;
     new_d->data = NULL;
@@ -824,6 +824,12 @@
     alarm_colors[DLG_COLOR_HOT_NORMAL] = ERROR_HOT_NORMAL;
     alarm_colors[DLG_COLOR_HOT_FOCUS] = ERROR_HOT_FOCUS;
     alarm_colors[DLG_COLOR_TITLE] = ERROR_TITLE;
+
+    listbox_colors[DLG_COLOR_NORMAL] = PMENU_ENTRY_COLOR;
+    listbox_colors[DLG_COLOR_FOCUS] = PMENU_SELECTED_COLOR;
+    listbox_colors[DLG_COLOR_HOT_NORMAL] = PMENU_ENTRY_COLOR;
+    listbox_colors[DLG_COLOR_HOT_FOCUS] = PMENU_SELECTED_COLOR;
+    listbox_colors[DLG_COLOR_TITLE]= PMENU_TITLE_COLOR;
 }
 
 /* --------------------------------------------------------------------------------------------- */
Index: mc-4.8.11/lib/widget/dialog.h
===================================================================
--- mc-4.8.11.orig/lib/widget/dialog.h	2014-02-07 19:27:58.128770525 +0400
+++ mc-4.8.11/lib/widget/dialog.h	2014-02-07 19:27:58.128770525 +0400
@@ -83,7 +83,7 @@
     gboolean modal;             /* type of dialog: modal or not */
     dlg_flags_t flags;          /* User flags */
     const char *help_ctx;       /* Name of the help entry */
-    dlg_colors_t color;         /* Color set. Unused in viewer and editor */
+    const int *color;           /* Color set. Unused in viewer and editor */
     char *title;                /* Title of the dialog */
 
     /* Set and received by the user */
@@ -111,6 +111,7 @@
 /* Color styles for normal and error dialogs */
 extern dlg_colors_t dialog_colors;
 extern dlg_colors_t alarm_colors;
+extern dlg_colors_t listbox_colors;
 
 extern GList *top_dlg;
 
Index: mc-4.8.11/lib/widget/listbox-window.c
===================================================================
--- mc-4.8.11.orig/lib/widget/listbox-window.c	2014-02-07 19:27:58.128770525 +0400
+++ mc-4.8.11/lib/widget/listbox-window.c	2014-02-07 19:27:58.128770525 +0400
@@ -60,14 +60,6 @@
 create_listbox_window_centered (int center_y, int center_x, int lines, int cols,
                                 const char *title, const char *help)
 {
-    const dlg_colors_t listbox_colors = {
-        PMENU_ENTRY_COLOR,
-        PMENU_SELECTED_COLOR,
-        PMENU_ENTRY_COLOR,
-        PMENU_SELECTED_COLOR,
-        PMENU_TITLE_COLOR
-    };
-
     const int space = 4;
 
     int xpos, ypos;
Index: mc-4.8.11/src/filemanager/boxes.c
===================================================================
--- mc-4.8.11.orig/src/filemanager/boxes.c	2014-02-07 19:27:58.128770525 +0400
+++ mc-4.8.11/src/filemanager/boxes.c	2014-02-07 19:34:09.444782322 +0400
@@ -104,6 +104,8 @@
 static unsigned long panel_listing_types_id, panel_user_format_id;
 static unsigned long mini_user_status_id, mini_user_format_id;
 
+static unsigned long skin_name_id;
+
 #ifdef HAVE_CHARSET
 static int new_display_codepage;
 static unsigned long disp_bits_name_id;
@@ -113,6 +115,9 @@
 static unsigned long ftpfs_always_use_proxy_id, ftpfs_proxy_host_id;
 #endif /* ENABLE_VFS && ENABLE_VFS_FTP */
 
+GArray * skin_names;
+gchar * current_skin_name;
+
 #ifdef ENABLE_BACKGROUND
 static WListbox *bg_list = NULL;
 #endif /* ENABLE_BACKGROUND */
@@ -515,6 +520,122 @@
 }
 
 /* --------------------------------------------------------------------------------------------- */
+
+static void
+skin_apply (const gchar *skin_override)
+{
+    GError *error = NULL;
+    mc_skin_deinit ();
+    mc_skin_init (skin_override, &error);
+    mc_fhl_free (&mc_filehighlight);
+    mc_filehighlight = mc_fhl_new (TRUE);
+    dlg_set_default_colors ();
+    panel_deinit ();
+    panel_init ();
+    repaint_screen ();
+    if (error != NULL)
+    {
+        message (D_ERROR, _("Warning"), "%s", error->message);
+        g_error_free (error);
+    }
+}
+
+/* --------------------------------------------------------------------------------------------- */
+
+static cb_ret_t
+skin_callback (Widget * w, Widget * sender, widget_msg_t msg, int parm, void *data)
+{
+    return dlg_default_callback (w, sender, msg, parm, data);
+}
+
+/* --------------------------------------------------------------------------------------------- */
+
+static int
+sel_skin_button (WButton * button, int action)
+{
+    int result;
+    WListbox *skin_list;
+    WDialog *skin_dlg;
+    gchar *skin_name;
+    int lxx, lyy;
+    unsigned int i;
+
+    (void) action;
+
+    lxx = COLS / 2;
+    lyy = (LINES - 13) / 2;
+    skin_dlg =
+        dlg_create (TRUE, lyy, lxx, 13, 24, dialog_colors, skin_callback, NULL,
+                    "[Skins]", _("Skin"), DLG_COMPACT);
+
+    skin_list = listbox_new (1, 1, 11, 22, FALSE, NULL);
+    for (i = 0; i < skin_names->len; i++) {
+        skin_name = g_array_index(skin_names, gchar *, i);
+        listbox_add_item (skin_list, LISTBOX_APPEND_AT_END, 0, skin_name, NULL);
+        if (!strcmp(skin_name, current_skin_name))
+            listbox_select_entry (skin_list, i);
+    }
+
+    add_widget (skin_dlg, skin_list);
+
+    result = dlg_run (skin_dlg);
+    if (result == B_ENTER) {
+        Widget *w;
+        listbox_get_current (skin_list, &skin_name, NULL);
+        g_free (current_skin_name);
+        current_skin_name = g_strdup(skin_name);
+        skin_apply (skin_name);
+        w = dlg_find_by_id (WIDGET (button)->owner, skin_name_id);
+        button_set_text (BUTTON (w), str_fit_to_term(skin_name, 20, J_LEFT_FIT));
+    }
+    dlg_destroy (skin_dlg);
+    return 0;
+}
+
+/* --------------------------------------------------------------------------------------------- */
+
+void
+appearance_box (void)
+{
+    unsigned int i;
+
+    current_skin_name = g_strdup(mc_skin__default.name);
+    skin_names = mc_skin_list();
+
+    {
+        quick_widget_t quick_widgets[] = {
+            /* *INDENT-OFF* */
+            QUICK_START_COLUMNS,
+                QUICK_LABEL (N_("Skin:"), NULL),
+            QUICK_NEXT_COLUMN,
+                QUICK_BUTTON (str_fit_to_term(current_skin_name, 20, J_LEFT_FIT),
+                              B_USER, sel_skin_button, &skin_name_id),
+            QUICK_STOP_COLUMNS,
+            QUICK_BUTTONS_OK_CANCEL,
+            QUICK_END
+            /* *INDENT-ON* */
+        };
+
+        quick_dialog_t qdlg = {
+            -1, -1, 54,
+            _("Appearance"), "[Skins]",
+            quick_widgets, dlg_default_callback, NULL
+        };
+
+        if (quick_dialog (&qdlg) == B_ENTER) {
+            mc_config_set_string (mc_main_config, CONFIG_APP_SECTION, "skin", current_skin_name);
+        } else {
+            skin_apply (NULL);
+        }
+    }
+
+    g_free (current_skin_name);
+    for (i = 0; i < skin_names->len; i++)
+        g_free (g_array_index (skin_names, gchar *, i));
+    g_array_free (skin_names, TRUE);
+}
+
+/* --------------------------------------------------------------------------------------------- */
 
 void
 panel_options_box (void)
Index: mc-4.8.11/src/filemanager/boxes.h
===================================================================
--- mc-4.8.11.orig/src/filemanager/boxes.h	2014-02-07 19:27:58.128770525 +0400
+++ mc-4.8.11/src/filemanager/boxes.h	2014-02-07 19:27:58.128770525 +0400
@@ -19,6 +19,7 @@
 /*** declarations of public functions ************************************************************/
 
 void configure_box (void);
+void appearance_box (void);
 void panel_options_box (void);
 int panel_listing_box (WPanel * p, char **user, char **mini, int *use_msformat, int num);
 const panel_field_t *sort_box (dir_sort_options_t * op, const panel_field_t * sort_field);
Index: mc-4.8.11/src/filemanager/midnight.c
===================================================================
--- mc-4.8.11.orig/src/filemanager/midnight.c	2014-02-07 19:27:58.128770525 +0400
+++ mc-4.8.11/src/filemanager/midnight.c	2014-02-07 19:27:58.128770525 +0400
@@ -337,6 +337,8 @@
     entries =
         g_list_prepend (entries, menu_entry_create (_("C&onfirmation..."), CK_OptionsConfirm));
     entries =
+        g_list_prepend (entries, menu_entry_create (_("&Appearance..."), CK_OptionsAppearance));
+    entries =
         g_list_prepend (entries, menu_entry_create (_("&Display bits..."), CK_OptionsDisplayBits));
     entries = g_list_prepend (entries, menu_entry_create (_("Learn &keys..."), CK_LearnKeys));
 #ifdef ENABLE_VFS
@@ -1250,6 +1252,9 @@
     case CK_OptionsLayout:
         layout_box ();
         break;
+    case CK_OptionsAppearance:
+        appearance_box ();
+        break;
     case CK_LearnKeys:
         learn_keys ();
         break;
@@ -1743,19 +1748,11 @@
 {
     gboolean ret;
 
-    dlg_colors_t midnight_colors;
-
-    midnight_colors[DLG_COLOR_NORMAL] = mc_skin_color_get ("dialog", "_default_");
-    midnight_colors[DLG_COLOR_FOCUS] = mc_skin_color_get ("dialog", "focus");
-    midnight_colors[DLG_COLOR_HOT_NORMAL] = mc_skin_color_get ("dialog", "hotnormal");
-    midnight_colors[DLG_COLOR_HOT_FOCUS] = mc_skin_color_get ("dialog", "hotfocus");
-    midnight_colors[DLG_COLOR_TITLE] = mc_skin_color_get ("dialog", "title");
-
 #ifdef USE_INTERNAL_EDIT
     edit_stack_init ();
 #endif
 
-    midnight_dlg = dlg_create (FALSE, 0, 0, LINES, COLS, midnight_colors, midnight_callback,
+    midnight_dlg = dlg_create (FALSE, 0, 0, LINES, COLS, dialog_colors, midnight_callback,
                                midnight_event, "[main]", NULL, DLG_NONE);
 
     /* Check if we were invoked as an editor or file viewer */
Index: mc-4.8.11/src/main.c
===================================================================
--- mc-4.8.11.orig/src/main.c	2014-02-07 19:27:58.128770525 +0400
+++ mc-4.8.11/src/main.c	2014-02-07 19:27:58.128770525 +0400
@@ -352,7 +352,8 @@
 
     tty_init_colors (mc_global.tty.disable_colors, mc_args__force_colors);
 
-    mc_skin_init (&error);
+    mc_skin_init (NULL, &error);
+    dlg_set_default_colors ();
     if (error != NULL)
     {
         message (D_ERROR, _("Warning"), "%s", error->message);
@@ -360,8 +361,6 @@
         error = NULL;
     }
 
-    dlg_set_default_colors ();
-
 #ifdef ENABLE_SUBSHELL
     /* Done here to ensure that the subshell doesn't  */
     /* inherit the file descriptors opened below, etc */
