From 01a7406e270277001bdb8e0ac277da3328c138ec Mon Sep 17 00:00:00 2001
From: Andreas Mohr <and@gmx.li>
Date: Sun, 17 Jan 2016 16:43:31 +0000
Subject: [PATCH] cleanup mountlist.c remove unused read_file_system_list() parameter

need_fs_type and all_fs never varied

Signed-off-by: Andreas Mohr <and@gmx.li>
---
 src/filemanager/mountlist.c | 27 +++++++++++----------------
 1 file changed, 11 insertions(+), 16 deletions(-)

diff --git a/src/filemanager/mountlist.c b/src/filemanager/mountlist.c
index 3aa7a6a..14477b1 100644
--- a/src/filemanager/mountlist.c
+++ b/src/filemanager/mountlist.c
@@ -645,7 +645,7 @@ unescape_tab (char *str)
    the returned list are valid.  Otherwise, they might not be.  */
 
 static GSList *
-read_file_system_list (int need_fs_type)
+read_file_system_list (void)
 {
     GSList *mount_list = NULL;
     struct mount_entry *me;
@@ -1057,17 +1057,14 @@ read_file_system_list (int need_fs_type)
             me->me_type = "";
             me->me_type_malloced = 0;
 #ifdef GETFSTYP                 /* SVR3.  */
-            if (need_fs_type)
-            {
-                struct statfs fsd;
-                char typebuf[FSTYPSZ];
+            struct statfs fsd;
+            char typebuf[FSTYPSZ];
 
-                if (statfs (me->me_mountdir, &fsd, sizeof (fsd), 0) != -1
-                    && sysfs (GETFSTYP, fsd.f_fstyp, typebuf) != -1)
-                {
-                    me->me_type = g_strdup (typebuf);
-                    me->me_type_malloced = 1;
-                }
+            if (statfs (me->me_mountdir, &fsd, sizeof (fsd), 0) != -1
+                && sysfs (GETFSTYP, fsd.f_fstyp, typebuf) != -1)
+            {
+                me->me_type = g_strdup (typebuf);
+                me->me_type_malloced = 1;
             }
 #endif
             me->me_dummy = ME_DUMMY (me->me_devname, me->me_type);
@@ -1290,8 +1287,6 @@ read_file_system_list (int need_fs_type)
     }
 #endif /* MOUNTED_INTERIX_STATVFS */
 
-    (void) need_fs_type;        /* avoid argument-unused warning */
-
     return g_slist_reverse (mount_list);
 
   free_then_fail:
@@ -1318,7 +1313,7 @@ read_file_system_list (int need_fs_type)
  */
 
 static GSList *
-read_file_system_list (int need_fs_type, int all_fs)
+read_file_system_list (void)
 {
     struct _disk_entry de;
     struct statfs fs;
@@ -1694,7 +1689,7 @@ init_my_statfs (void)
 {
 #ifdef HAVE_INFOMOUNT_LIST
     free_my_statfs ();
-    mc_mount_list = read_file_system_list (1);
+    mc_mount_list = read_file_system_list ();
 #endif /* HAVE_INFOMOUNT_LIST */
 }
 
@@ -1754,7 +1749,7 @@ my_statfs (struct my_statfs *myfs_stats, const char *path)
         struct mount_entry *entry;
     struct fs_usage fs_use;
 
-    entry = read_file_system_list (0, 0);
+    entry = read_file_system_list ();
     if (entry != NULL)
     {
         get_fs_usage (entry->me_mountdir, NULL, &fs_use);
