
remove unneeded compute_namelen() function

always DIRENT_LENGTH_COMPUTED 1 -> compute_namelen() returns without functional logic

Signed-off-by: Andreas Mohr <and@gmx.li>

--- a/lib/fs.h
+++ b/lib/fs.h
@@ -100,7 +100,6 @@
 
 /* unistd.h defines _POSIX_VERSION on POSIX.1 systems. */
 #define NLENGTH(dirent) (strlen ((dirent)->d_name))
-#define DIRENT_LENGTH_COMPUTED 1
 
 /* DragonFlyBSD doesn't provide MAXNAMLEN macro */
 #ifndef MAXNAMLEN
@@ -122,15 +121,4 @@
 
 /*** inline functions ****************************************************************************/
 
-static inline void
-compute_namelen (struct dirent *dent __attribute__ ((unused)))
-{
-#ifdef DIRENT_LENGTH_COMPUTED
-    (void) dent;
-    return;
-#else
-    dent->d_namlen = strlen (dent);
-#endif
-}
-
 #endif
--- a/lib/vfs/direntry.c
+++ b/lib/vfs/direntry.c
@@ -448,7 +448,6 @@
     else
         vfs_die ("Null in structure-cannot happen");
 
-    compute_namelen (&dir.dent);
     info->cur = g_list_next (info->cur);
 
     return (void *) &dir;
--- a/src/vfs/extfs/extfs.c
+++ b/src/vfs/extfs/extfs.c
@@ -1061,7 +1061,6 @@
 
     g_strlcpy (dir.dent.d_name, (*info)->name, MC_MAXPATHLEN);
 
-    compute_namelen (&dir.dent);
     *info = (*info)->next_in_dir;
 
     return (void *) &dir;
--- a/src/vfs/sftpfs/dir.c
+++ b/src/vfs/sftpfs/dir.c
@@ -149,7 +149,6 @@
         return NULL;
 
     g_strlcpy (sftpfs_dirent.dent.d_name, mem, BUF_MEDIUM);
-    compute_namelen (&sftpfs_dirent.dent);
     return &sftpfs_dirent;
 }
 
--- a/src/vfs/smbfs/smbfs.c
+++ b/src/vfs/smbfs/smbfs.c
@@ -939,8 +939,6 @@
     g_strlcpy (dirent_dest, smbfs_info->current->text, MC_MAXPATHLEN);
     smbfs_info->current = smbfs_info->current->next;
 
-    compute_namelen (&smbfs_readdir_data.dent);
-
     return &smbfs_readdir_data;
 }
 
--- a/src/vfs/undelfs/undelfs.c
+++ b/src/vfs/undelfs/undelfs.c
@@ -414,8 +414,6 @@
                     (long) delarray[readdir_ptr].ino, delarray[readdir_ptr].num_blocks);
     readdir_ptr++;
 
-    compute_namelen (&undelfs_readdir_data.dent);
-
     return &undelfs_readdir_data;
 }
 
