diff --git a/src/viewer/internal.h b/src/viewer/internal.h
index fdabc79..6c229df 100644
--- a/src/viewer/internal.h
+++ b/src/viewer/internal.h
@@ -274,8 +274,8 @@ void mcview_done (mcview_t *view);
 void mcview_select_encoding (mcview_t *view);
 void mcview_set_codeset (mcview_t *view);
 void mcview_show_error (mcview_t *view, const char *error);
-off_t mcview_bol (mcview_t *view, off_t current, int *eol_width);
-off_t mcview_eol (mcview_t *view, off_t current, int *eol_width);
+off_t mcview_bol (mcview_t *view, off_t current);
+off_t mcview_eol (mcview_t *view, off_t current);
 
 /* move.c */
 void mcview_move_up (mcview_t *, off_t);
diff --git a/src/viewer/lib.c b/src/viewer/lib.c
index a01a8ff..142e24c 100644
--- a/src/viewer/lib.c
+++ b/src/viewer/lib.c
@@ -244,67 +244,59 @@ mcview_show_error (mcview_t * view, const char *msg)
 
 /* --------------------------------------------------------------------------------------------- */
 
-/* returns index of first char on line */
+/* returns index of the first char in the line */
+/* it is constant for all line characters */
 off_t
-mcview_bol (mcview_t * view, off_t current, int * eol_width)
+mcview_bol (mcview_t * view, off_t current)
 {
-    int c, prev_ch = 0;
-
-    *eol_width = 1;
+    int c;
+    off_t filesize;
+    filesize = mcview_get_filesize (view);
+    if (current <= 0)
+        return 0;
+    if (current > filesize)
+        return filesize;
+    if (!mcview_get_byte (view, current, &c))
+        return current;
+    if (c == '\n') {
+        if (!mcview_get_byte (view, current - 1, &c))
+            return current;
+        if (c == '\r')
+            current--;
+    }
     while (current > 0) {
         if (!mcview_get_byte (view, current - 1, &c))
             break;
-        if (c == '\r') {
-            if (prev_ch == '\n') {
-                /* Windows/DOS (CR LF) width of eol = 2 bytes */
-                if (current > 0)
-                    current++;
-                *eol_width = 2;
-            }
-            /* Macintosh (CR) width of eol = 1 byte */
-            break;
-        } else if (prev_ch == '\n') {
-            /* UNIX (LF)  width of eol = 1 byte */
-            if (current > 0)
-                current++;
+        if (c == '\r' || c == '\n')
             break;
-        }
         current--;
-        prev_ch = c;
     }
-    if (current < 0)
-        return 0;
     return current;
 }
 
 /* returns index of last char on line + width EOL */
 /* mcview_eol of the current line == mcview_bol next line */
 off_t
-mcview_eol (mcview_t * view, off_t current, int * eol_width)
+mcview_eol (mcview_t * view, off_t current)
 {
     int c, prev_ch = 0;
     off_t filesize;
-    *eol_width = 1;
     filesize = mcview_get_filesize (view);
+    if (current < 0)
+        return 0;
+    if (current >= filesize)
+        return filesize;
     while (current < filesize) {
         if (!mcview_get_byte (view, current, &c))
             break;
         if (c == '\n') {
-            if (prev_ch == '\r') {
-                /* Windows/DOS (CR LF) width of eol = 2 bytes */
-                *eol_width = 2;
-            }
-            /* Macintosh (CR) width of eol = 1 byte */
+            current++;
             break;
         } else if (prev_ch == '\r') {
-            /* UNIX (LF)  width of eol = 1 byte */
             break;
         }
         current++;
         prev_ch = c;
     }
-    current += *eol_width;
-    if (current > filesize)
-        return filesize;
     return current;
 }
diff --git a/src/viewer/mcviewer.c b/src/viewer/mcviewer.c
index b8fc167..a520d17 100644
--- a/src/viewer/mcviewer.c
+++ b/src/viewer/mcviewer.c
@@ -381,11 +381,10 @@ mcview_load (mcview_t * view, const char *command, const char *file, int start_l
     if (mcview_remember_file_position && view->filename != NULL) {
         long line, col;
         off_t new_offset;
-        int eol_len;
         canon_fname = vfs_canon (view->filename);
         load_file_position (canon_fname, &line, &col, &new_offset);
         new_offset = min (new_offset, mcview_get_filesize (view));
-        view->dpy_start = mcview_bol (view, new_offset, &eol_len);
+        view->dpy_start = mcview_bol (view, new_offset);
         g_free (canon_fname);
     }
 
diff --git a/src/viewer/move.c b/src/viewer/move.c
index b4d0d5a..9e9e47e 100644
--- a/src/viewer/move.c
+++ b/src/viewer/move.c
@@ -100,12 +100,11 @@ mcview_move_up (mcview_t * view, off_t lines)
     } else {
         const screen_dimen width = view->data_area.width;
         off_t i;
-        int eol_len = 1;
         for (i = 0; i < lines; i++) {
-            new_offset = mcview_bol (view, view->dpy_start, &eol_len);
+            new_offset = mcview_bol (view, view->dpy_start);
             if (new_offset > 0)
-                new_offset -= eol_len;
-                new_offset = mcview_bol (view, new_offset, &eol_len);
+                new_offset--;
+            new_offset = mcview_bol (view, new_offset);
             if (new_offset < 0)
                 new_offset = 0;
             view->dpy_start = new_offset;
@@ -141,8 +140,7 @@ mcview_move_down (mcview_t * view, off_t lines)
         int c;
         for (i = 0; i < lines; i++) {
             off_t new_offset;
-            int eol_len;
-            new_offset = mcview_eol(view, view->dpy_start, &eol_len);
+            new_offset = mcview_eol(view, view->dpy_start);
             view->dpy_start = new_offset;
         }
     }
@@ -258,8 +256,7 @@ mcview_moveto_bol (mcview_t * view)
     if (view->hex_mode) {
         view->hex_cursor -= view->hex_cursor % view->bytes_per_line;
     } else if (!view->text_wrap_mode) {
-        int eol_len;
-        view->dpy_start = mcview_bol (view, view->dpy_start, &eol_len);
+        view->dpy_start = mcview_bol (view, view->dpy_start);
     }
     mcview_movement_fixups (view, TRUE);
 }
@@ -366,8 +363,7 @@ mcview_moveto_match (mcview_t * view)
         view->hex_cursor = offset;
         view->dpy_start = offset - offset % view->bytes_per_line;
     } else {
-        int eol_len;
-        view->dpy_start = mcview_bol (view, offset, &eol_len);
+        view->dpy_start = mcview_bol (view, offset);
     }
 
     mcview_scroll_to_cursor (view);
